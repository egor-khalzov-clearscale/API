ASSERTIONS:
* Required field		.body("Result.LastName", not(nullValue()))
* Optional field		.body("Result", hasKey("MiddleInitial"))
* Has Specific Value	.body("Result.Address.AddressLine1", equalTo("7965 N High St"))
* Not present 			.body("$", not(hasKey("age")))
* Contains				.body("Result.Name", anyOf(hasItem("string")))
* Null Value			.body("Result.PrimarySelectableResourceType.Books[0]", nullValue())
* Response status		.assertThat().statusCode(200)
* Response time			.time(lessThan(60L),TimeUnit.SECONDS)


IMPORTS:
import static io.restassured.RestAssured.given;
import org.testng.Assert;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.Test;

import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.hasKey;
import static org.hamcrest.Matchers.not;
import static org.hamcrest.Matchers.nullValue;
import static org.hamcrest.Matchers.empty;
import static org.hamcrest.Matchers.lessThan;


import java.util.concurrent.TimeUnit;
import io.restassured.RestAssured;
import io.restassured.path.json.JsonPath;
import io.restassured.response.Response;
import resources.ReusableMethods;
import resources.base;

HEADERS:
.header("accept", prop.getProperty("accept"))
.header("X-Api-Key", prop.getProperty("X-Api-Key"))
.header("X-CompanyId", prop.getProperty("X-CompanyId"))
.header("X-ClubId", prop.getProperty("X-Club1Id"))

given().log().body()
then().log().all()

//		JsonPath js = ReusableMethods.rawToJson(res);
//		String id = js.get("Result.Address.AddressLine1");
//		System.out.println(id);
//		String responseString = res.asString();
//		System.out.println("Response: " + responseString);
-------------------------------------------------------------
@BeforeClass
	public void getData() {
		base.getPropertyData();
	}
...	
	String member = prop.getProperty("activeMember1_CustomerId");
		int activeMember1 = Integer.parseInt(activeMember1String);   
	String associatedClub = prop.getProperty("associatedClub1");
	String ProdCategory = prop.getProperty("prodCategory1");  
	String bookId = prop.getProperty("book1Id"); 
	String sDateTimeNoOffset = prop.getProperty("sDateTimeNoOffset");
	String eDateTimeNoOffset = prop.getProperty("eDateTimeNoOffset");
...
	RestAssured.baseURI = prop.getProperty("baseURI");    
...	    
...		"+activeMember1)  
		"+associatedClub1+"/"+prodCategory1)
		    
		    