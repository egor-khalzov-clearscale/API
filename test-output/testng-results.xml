<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="381" passed="379" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2020-02-18T15:00:06 EST" name="CompeteAPI v3" finished-at="2020-02-18T15:18:35 EST" duration-ms="1108847">
    <groups>
    </groups>
    <test started-at="2020-02-18T15:00:06 EST" name="API - Continuous Integration" finished-at="2020-02-18T15:18:35 EST" duration-ms="1108847">
      <class name="JonasFitness.API.CreateMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.CreateMember@3cebbb30]" started-at="2020-02-18T15:00:51 EST" name="getData" finished-at="2020-02-18T15:00:51 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="memberCreated()[pri:0, instance:JonasFitness.API.CreateMember@3cebbb30]" started-at="2020-02-18T15:00:51 EST" name="memberCreated" description="PBI:147807" finished-at="2020-02-18T15:00:56 EST" duration-ms="4415" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberCreated -->
      </class> <!-- JonasFitness.API.CreateMember -->
      <class name="JonasFitness.API.GetOnlineAvailableCoursesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetOnlineAvailableCoursesByMember@53aac487]" started-at="2020-02-18T15:16:59 EST" name="getData" finished-at="2020-02-18T15:16:59 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="coursesFound()[pri:0, instance:JonasFitness.API.GetOnlineAvailableCoursesByMember@53aac487]" started-at="2020-02-18T15:16:59 EST" name="coursesFound" description="PBI:144257" finished-at="2020-02-18T15:17:01 EST" duration-ms="1936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coursesFound -->
        <test-method signature="coursesNotFound()[pri:0, instance:JonasFitness.API.GetOnlineAvailableCoursesByMember@53aac487]" started-at="2020-02-18T15:17:01 EST" name="coursesNotFound" description="PBI:144257" finished-at="2020-02-18T15:17:02 EST" duration-ms="774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coursesNotFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.GetOnlineAvailableCoursesByMember@53aac487]" started-at="2020-02-18T15:17:02 EST" name="customerNotFound" description="PBI:144257" finished-at="2020-02-18T15:17:02 EST" duration-ms="363" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
      </class> <!-- JonasFitness.API.GetOnlineAvailableCoursesByMember -->
      <class name="JonasFitness.API.GetAppointmentResourceTypeByProduct">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentResourceTypeByProduct@27f981c6]" started-at="2020-02-18T15:15:14 EST" name="getData" finished-at="2020-02-18T15:15:14 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ProductFoundNoSelectableResources()[pri:0, instance:JonasFitness.API.GetAppointmentResourceTypeByProduct@27f981c6]" started-at="2020-02-18T15:15:14 EST" name="ProductFoundNoSelectableResources" description="PBI:127470" finished-at="2020-02-18T15:15:14 EST" duration-ms="662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductFoundNoSelectableResources -->
        <test-method signature="ProductFoundSelectableResources()[pri:0, instance:JonasFitness.API.GetAppointmentResourceTypeByProduct@27f981c6]" started-at="2020-02-18T15:15:14 EST" name="ProductFoundSelectableResources" description="PBI:127470" finished-at="2020-02-18T15:15:15 EST" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductFoundSelectableResources -->
        <test-method signature="ProductNotFound()[pri:0, instance:JonasFitness.API.GetAppointmentResourceTypeByProduct@27f981c6]" started-at="2020-02-18T15:15:15 EST" name="ProductNotFound" description="PBI:127470" finished-at="2020-02-18T15:15:15 EST" duration-ms="531" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductNotFound -->
      </class> <!-- JonasFitness.API.GetAppointmentResourceTypeByProduct -->
      <class name="JonasFitness.API.EnrollMemberInCourseWithPunchcard">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:10:45 EST" name="getData" finished-at="2020-02-18T15:10:45 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="courseNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:10:45 EST" name="courseNotFound" description="PBI:147820" finished-at="2020-02-18T15:10:45 EST" duration-ms="717" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotFound -->
        <test-method signature="memberEnrolledFreeCourse()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:10:45 EST" name="memberEnrolledFreeCourse" description="PBI:147820" finished-at="2020-02-18T15:11:02 EST" duration-ms="16462" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourse -->
        <test-method signature="memberEnrolledFreeCourseCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:11:02 EST" name="memberEnrolledFreeCourseCollectionsMember" description="PBI:147820" finished-at="2020-02-18T15:11:33 EST" duration-ms="31371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourseCollectionsMember -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:11:33 EST" name="memberEnrolledOnStandby" description="PBI:147820" finished-at="2020-02-18T15:11:49 EST" duration-ms="16215" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolledPaidCourseNotStarted()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:11:49 EST" name="memberEnrolledPaidCourseNotStarted" description="PBI:147820" finished-at="2020-02-18T15:12:05 EST" duration-ms="16026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidCourseNotStarted -->
        <test-method signature="memberEnrolledPaidCourseStarted()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:12:05 EST" name="memberEnrolledPaidCourseStarted" description="PBI:147820" finished-at="2020-02-18T15:12:22 EST" duration-ms="16592" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidCourseStarted -->
        <test-method signature="notEnoughPunches()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:12:22 EST" name="notEnoughPunches" description="PBI:147820" finished-at="2020-02-18T15:12:23 EST" duration-ms="842" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notEnoughPunches -->
        <test-method signature="punchcardNotAllowed()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:12:23 EST" name="punchcardNotAllowed" description="PBI:147820" finished-at="2020-02-18T15:12:24 EST" duration-ms="920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- punchcardNotAllowed -->
        <test-method signature="standbyNotAllowed()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithPunchcard@82de64a]" started-at="2020-02-18T15:12:24 EST" name="standbyNotAllowed" description="PBI:147820" finished-at="2020-02-18T15:12:25 EST" duration-ms="993" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- standbyNotAllowed -->
      </class> <!-- JonasFitness.API.EnrollMemberInCourseWithPunchcard -->
      <class name="JonasFitness.API.GetPackagePricing">
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:15 EST" name="customerNotFound" description="PBI:155660" finished-at="2020-02-18T15:17:15 EST" duration-ms="580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:15 EST" name="getData" finished-at="2020-02-18T15:17:15 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="itemFound_Club2()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:15 EST" name="itemFound_Club2" description="PBI:155660" finished-at="2020-02-18T15:17:17 EST" duration-ms="1642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_Club2 -->
        <test-method signature="itemFound_FreeItem()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:17 EST" name="itemFound_FreeItem" description="PBI:155660" finished-at="2020-02-18T15:17:19 EST" duration-ms="1811" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_FreeItem -->
        <test-method signature="itemFound_MultipleTaxes()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:19 EST" name="itemFound_MultipleTaxes" description="PBI:155660" finished-at="2020-02-18T15:17:21 EST" duration-ms="1698" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_MultipleTaxes -->
        <test-method signature="itemFound_NoTax()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:21 EST" name="itemFound_NoTax" description="PBI:155660" finished-at="2020-02-18T15:17:22 EST" duration-ms="1617" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_NoTax -->
        <test-method signature="itemFound_SingleTax()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:22 EST" name="itemFound_SingleTax" description="PBI:155660" finished-at="2020-02-18T15:17:24 EST" duration-ms="1644" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_SingleTax -->
        <test-method signature="itemNotFound()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:24 EST" name="itemNotFound" description="PBI:155660" finished-at="2020-02-18T15:17:25 EST" duration-ms="803" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemNotFound -->
        <test-method signature="missingQuantityConfiguration()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:25 EST" name="missingQuantityConfiguration" description="PBI:155660" finished-at="2020-02-18T15:17:25 EST" duration-ms="527" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingQuantityConfiguration -->
        <test-method signature="tierPricingTier1()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:25 EST" name="tierPricingTier1" description="PBI:155660" finished-at="2020-02-18T15:17:27 EST" duration-ms="1614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tierPricingTier1 -->
        <test-method signature="tierPricingTier2()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:27 EST" name="tierPricingTier2" description="PBI:155660" finished-at="2020-02-18T15:17:29 EST" duration-ms="1980" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tierPricingTier2 -->
        <test-method signature="tierPricingTier3()[pri:0, instance:JonasFitness.API.GetPackagePricing@7db12bb6]" started-at="2020-02-18T15:17:29 EST" name="tierPricingTier3" description="PBI:155660" finished-at="2020-02-18T15:17:30 EST" duration-ms="1602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tierPricingTier3 -->
      </class> <!-- JonasFitness.API.GetPackagePricing -->
      <class name="JonasFitness.API.GetAppointmentsByBook">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentsByBook@1b11171f]" started-at="2020-02-18T15:15:15 EST" name="getData" finished-at="2020-02-18T15:15:15 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="AppointmentsFound()[pri:0, instance:JonasFitness.API.GetAppointmentsByBook@1b11171f]" started-at="2020-02-18T15:15:15 EST" name="AppointmentsFound" description="PBI:132256" finished-at="2020-02-18T15:15:24 EST" duration-ms="8270" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsFound -->
        <test-method signature="AppointmentsNotFound()[pri:0, instance:JonasFitness.API.GetAppointmentsByBook@1b11171f]" started-at="2020-02-18T15:15:24 EST" name="AppointmentsNotFound" description="PBI:132256" finished-at="2020-02-18T15:15:24 EST" duration-ms="510" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsNotFound -->
        <test-method signature="InvalidDateRange()[pri:0, instance:JonasFitness.API.GetAppointmentsByBook@1b11171f]" started-at="2020-02-18T15:15:24 EST" name="InvalidDateRange" description="PBI:132256" finished-at="2020-02-18T15:15:25 EST" duration-ms="673" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidDateRange -->
      </class> <!-- JonasFitness.API.GetAppointmentsByBook -->
      <class name="JonasFitness.API.GetNextProspectMemberId">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetNextProspectMemberId@72e5a8e]" started-at="2020-02-18T15:16:52 EST" name="getData" finished-at="2020-02-18T15:16:52 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ProspectMemberIdFound()[pri:0, instance:JonasFitness.API.GetNextProspectMemberId@72e5a8e]" started-at="2020-02-18T15:16:52 EST" name="ProspectMemberIdFound" description="PBI:150217" finished-at="2020-02-18T15:16:52 EST" duration-ms="583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProspectMemberIdFound -->
      </class> <!-- JonasFitness.API.GetNextProspectMemberId -->
      <class name="JonasFitness.API.GetAppointmentProductByCategory">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentProductByCategory@47d9a273]" started-at="2020-02-18T15:15:12 EST" name="getData" finished-at="2020-02-18T15:15:12 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ProductsFound()[pri:0, instance:JonasFitness.API.GetAppointmentProductByCategory@47d9a273]" started-at="2020-02-18T15:15:12 EST" name="ProductsFound" description="PBI:127468" finished-at="2020-02-18T15:15:12 EST" duration-ms="705" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductsFound -->
      </class> <!-- JonasFitness.API.GetAppointmentProductByCategory -->
      <class name="JonasFitness.API.GetFieldsForMemberCreationByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetFieldsForMemberCreationByMember@13fd2ccd]" started-at="2020-02-18T15:16:36 EST" name="getData" finished-at="2020-02-18T15:16:36 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="fieldsFound()[pri:0, instance:JonasFitness.API.GetFieldsForMemberCreationByMember@13fd2ccd]" started-at="2020-02-18T15:16:36 EST" name="fieldsFound" description="PBI:147804" finished-at="2020-02-18T15:16:38 EST" duration-ms="1930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fieldsFound -->
        <test-method signature="fieldsFound2()[pri:0, instance:JonasFitness.API.GetFieldsForMemberCreationByMember@13fd2ccd]" started-at="2020-02-18T15:16:38 EST" name="fieldsFound2" description="PBI:147804" finished-at="2020-02-18T15:16:39 EST" duration-ms="1273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fieldsFound2 -->
      </class> <!-- JonasFitness.API.GetFieldsForMemberCreationByMember -->
      <class name="JonasFitness.API.EnrollMemberInCourseOnAccount">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:36 EST" name="getData" finished-at="2020-02-18T15:02:36 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="courseEnded()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:36 EST" name="courseEnded" description="PBI:143589" finished-at="2020-02-18T15:02:37 EST" duration-ms="909" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseEnded -->
        <test-method signature="courseEnrollmentClosed()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:37 EST" name="courseEnrollmentClosed" description="PBI:143589" finished-at="2020-02-18T15:02:38 EST" duration-ms="910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseEnrollmentClosed -->
        <test-method signature="courseNotAvailableOnline()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:38 EST" name="courseNotAvailableOnline" description="PBI:143589" finished-at="2020-02-18T15:02:39 EST" duration-ms="882" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotAvailableOnline -->
        <test-method signature="courseNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:39 EST" name="courseNotFound" description="PBI:143589" finished-at="2020-02-18T15:02:39 EST" duration-ms="475" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotFound -->
        <test-method signature="creditLimitedExceeded()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:39 EST" name="creditLimitedExceeded" description="PBI:143589" finished-at="2020-02-18T15:02:40 EST" duration-ms="1047" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditLimitedExceeded -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:40 EST" name="customerNotFound" description="PBI:143589" finished-at="2020-02-18T15:02:41 EST" duration-ms="372" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="enrollmentNotAllowedCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:41 EST" name="enrollmentNotAllowedCollectionsMember" description="PBI:143589" finished-at="2020-02-18T15:02:42 EST" duration-ms="1023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedCollectionsMember -->
        <test-method signature="enrollmentNotAllowedFrozenMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:42 EST" name="enrollmentNotAllowedFrozenMember" description="PBI:143589" finished-at="2020-02-18T15:02:43 EST" duration-ms="954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedFrozenMember -->
        <test-method signature="enrollmentNotAllowedProspectMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:43 EST" name="enrollmentNotAllowedProspectMember" description="PBI:143589" finished-at="2020-02-18T15:02:44 EST" duration-ms="1305" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedProspectMember -->
        <test-method signature="enrollmentNotAllowedTerminatedMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:44 EST" name="enrollmentNotAllowedTerminatedMember" description="PBI:143589" finished-at="2020-02-18T15:02:45 EST" duration-ms="1151" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedTerminatedMember -->
        <test-method signature="enrollmentNotOpen()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:45 EST" name="enrollmentNotOpen" description="PBI:143589" finished-at="2020-02-18T15:02:46 EST" duration-ms="802" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotOpen -->
        <test-method signature="memberAlreadyEnrolled()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:46 EST" name="memberAlreadyEnrolled" description="PBI:143589" finished-at="2020-02-18T15:02:47 EST" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyEnrolled -->
        <test-method signature="memberAlreadyOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:47 EST" name="memberAlreadyOnStandby" description="PBI:143589" finished-at="2020-02-18T15:02:48 EST" duration-ms="831" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyOnStandby -->
        <test-method signature="memberEnrolledFreeCourse()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:02:48 EST" name="memberEnrolledFreeCourse" description="PBI:143589" finished-at="2020-02-18T15:03:04 EST" duration-ms="16412" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourse -->
        <test-method signature="memberEnrolledFreeCourseCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:03:04 EST" name="memberEnrolledFreeCourseCollectionsMember" description="PBI:143589" finished-at="2020-02-18T15:03:20 EST" duration-ms="16407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourseCollectionsMember -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:03:20 EST" name="memberEnrolledOnStandby" description="PBI:143589" finished-at="2020-02-18T15:03:36 EST" duration-ms="15804" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolledPaidCourseNotStarted()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:03:36 EST" name="memberEnrolledPaidCourseNotStarted" description="PBI:143589" finished-at="2020-02-18T15:03:52 EST" duration-ms="15901" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidCourseNotStarted -->
        <test-method signature="memberEnrolledPaidCourseStarted()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:03:52 EST" name="memberEnrolledPaidCourseStarted" description="PBI:143589" finished-at="2020-02-18T15:04:08 EST" duration-ms="16001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidCourseStarted -->
        <test-method signature="memberNotEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:04:08 EST" name="memberNotEnrolledOnStandby" description="PBI:143589" finished-at="2020-02-18T15:04:09 EST" duration-ms="949" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberNotEnrolledOnStandby -->
        <test-method signature="noFOP_AccountProblem()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:04:09 EST" name="noFOP_AccountProblem" description="PBI:143589" finished-at="2020-02-18T15:04:10 EST" duration-ms="1004" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noFOP_AccountProblem -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseOnAccount@290222c1]" started-at="2020-02-18T15:04:10 EST" name="productPriceChanged" description="PBI:143589" finished-at="2020-02-18T15:04:11 EST" duration-ms="1027" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
      </class> <!-- JonasFitness.API.EnrollMemberInCourseOnAccount -->
      <class name="JonasFitness.API.GetAllPackagesForPurchaseByClub">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAllPackagesForPurchaseByClub@54a7079e]" started-at="2020-02-18T15:15:04 EST" name="getData" finished-at="2020-02-18T15:15:04 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.GetAllPackagesForPurchaseByClub@54a7079e]" started-at="2020-02-18T15:15:04 EST" name="customerNotFound" description="PBI:143540" finished-at="2020-02-18T15:15:04 EST" duration-ms="555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="onlineNotAllowed_PackageFound()[pri:0, instance:JonasFitness.API.GetAllPackagesForPurchaseByClub@54a7079e]" started-at="2020-02-18T15:15:04 EST" name="onlineNotAllowed_PackageFound" description="PBI:143540" finished-at="2020-02-18T15:15:06 EST" duration-ms="1303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- onlineNotAllowed_PackageFound -->
        <test-method signature="packageFound()[pri:0, instance:JonasFitness.API.GetAllPackagesForPurchaseByClub@54a7079e]" started-at="2020-02-18T15:15:06 EST" name="packageFound" description="PBI:143540" finished-at="2020-02-18T15:15:08 EST" duration-ms="1969" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- packageFound -->
        <test-method signature="packageNotFound()[pri:0, instance:JonasFitness.API.GetAllPackagesForPurchaseByClub@54a7079e]" started-at="2020-02-18T15:15:08 EST" name="packageNotFound" description="PBI:143540" finished-at="2020-02-18T15:15:09 EST" duration-ms="1213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- packageNotFound -->
      </class> <!-- JonasFitness.API.GetAllPackagesForPurchaseByClub -->
      <class name="JonasFitness.API.GetActiveClubs">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetActiveClubs@201a4587]" started-at="2020-02-18T15:14:53 EST" name="getData" finished-at="2020-02-18T15:14:53 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ClubsFound()[pri:0, instance:JonasFitness.API.GetActiveClubs@201a4587]" started-at="2020-02-18T15:14:53 EST" name="ClubsFound" description="PBI:138959" finished-at="2020-02-18T15:14:54 EST" duration-ms="681" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClubsFound -->
      </class> <!-- JonasFitness.API.GetActiveClubs -->
      <class name="JonasFitness.API.GetClubsByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetClubsByMember@2d710f1a]" started-at="2020-02-18T15:16:00 EST" name="getData" finished-at="2020-02-18T15:16:00 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ClubsFound()[pri:0, instance:JonasFitness.API.GetClubsByMember@2d710f1a]" started-at="2020-02-18T15:16:00 EST" name="ClubsFound" description="PBI:127465" finished-at="2020-02-18T15:16:00 EST" duration-ms="609" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClubsFound -->
        <test-method signature="MemberNotFound()[pri:0, instance:JonasFitness.API.GetClubsByMember@2d710f1a]" started-at="2020-02-18T15:16:00 EST" name="MemberNotFound" description="PBI:127465" finished-at="2020-02-18T15:16:01 EST" duration-ms="386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberNotFound -->
      </class> <!-- JonasFitness.API.GetClubsByMember -->
      <class name="JonasFitness.API.GetFieldsForAddOnMemberCreationByEmployee">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetFieldsForAddOnMemberCreationByEmployee@6bd61f98]" started-at="2020-02-18T15:16:24 EST" name="getData" finished-at="2020-02-18T15:16:24 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="fieldsFound()[pri:0, instance:JonasFitness.API.GetFieldsForAddOnMemberCreationByEmployee@6bd61f98]" started-at="2020-02-18T15:16:24 EST" name="fieldsFound" description="PBI:147958" finished-at="2020-02-18T15:16:27 EST" duration-ms="2798" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fieldsFound -->
        <test-method signature="fieldsFound2()[pri:0, instance:JonasFitness.API.GetFieldsForAddOnMemberCreationByEmployee@6bd61f98]" started-at="2020-02-18T15:16:27 EST" name="fieldsFound2" description="PBI:147958" finished-at="2020-02-18T15:16:29 EST" duration-ms="2838" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fieldsFound2 -->
      </class> <!-- JonasFitness.API.GetFieldsForAddOnMemberCreationByEmployee -->
      <class name="JonasFitness.API.GetNextMemberId">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetNextMemberId@7d4f9aae]" started-at="2020-02-18T15:16:51 EST" name="getData" finished-at="2020-02-18T15:16:51 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="MemberIdFound()[pri:0, instance:JonasFitness.API.GetNextMemberId@7d4f9aae]" started-at="2020-02-18T15:16:51 EST" name="MemberIdFound" description="PBI:150230" finished-at="2020-02-18T15:16:52 EST" duration-ms="961" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberIdFound -->
      </class> <!-- JonasFitness.API.GetNextMemberId -->
      <class name="JonasFitness.API.GetAppointmentsByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentsByMember@1151e434]" started-at="2020-02-18T15:15:25 EST" name="getData" finished-at="2020-02-18T15:15:25 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="AppointmentsFound()[pri:0, instance:JonasFitness.API.GetAppointmentsByMember@1151e434]" started-at="2020-02-18T15:15:25 EST" name="AppointmentsFound" description="PBI:124124" finished-at="2020-02-18T15:15:26 EST" duration-ms="1040" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsFound -->
        <test-method signature="AppointmentsNotFound()[pri:0, instance:JonasFitness.API.GetAppointmentsByMember@1151e434]" started-at="2020-02-18T15:15:26 EST" name="AppointmentsNotFound" description="PBI:124124" finished-at="2020-02-18T15:15:26 EST" duration-ms="473" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsNotFound -->
        <test-method signature="InvalidDateRange()[pri:0, instance:JonasFitness.API.GetAppointmentsByMember@1151e434]" started-at="2020-02-18T15:15:26 EST" name="InvalidDateRange" description="PBI:124124" finished-at="2020-02-18T15:15:27 EST" duration-ms="361" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidDateRange -->
      </class> <!-- JonasFitness.API.GetAppointmentsByMember -->
      <class name="JonasFitness.API.GetEmployees">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:14 EST" name="getData" finished-at="2020-02-18T15:16:14 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="employeeInactiveActiveFalse()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:14 EST" name="employeeInactiveActiveFalse" description="PBI:150855" finished-at="2020-02-18T15:16:15 EST" duration-ms="682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeeInactiveActiveFalse -->
        <test-method signature="employeeInactiveActiveTrue()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:15 EST" name="employeeInactiveActiveTrue" description="PBI:150855" finished-at="2020-02-18T15:16:15 EST" duration-ms="354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeeInactiveActiveTrue -->
        <test-method signature="employeeNotFound()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:15 EST" name="employeeNotFound" description="PBI:150855" finished-at="2020-02-18T15:16:15 EST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeeNotFound -->
        <test-method signature="employeesFoundActiveOnlyNoOptionalParameters()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:15 EST" name="employeesFoundActiveOnlyNoOptionalParameters" description="PBI:150855" finished-at="2020-02-18T15:16:16 EST" duration-ms="657" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFoundActiveOnlyNoOptionalParameters -->
        <test-method signature="employeesFound_ActiveOnly_Address1()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:16 EST" name="employeesFound_ActiveOnly_Address1" description="PBI:150855" finished-at="2020-02-18T15:16:17 EST" duration-ms="661" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_Address1 -->
        <test-method signature="employeesFound_ActiveOnly_Address2()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:17 EST" name="employeesFound_ActiveOnly_Address2" description="PBI:150855" finished-at="2020-02-18T15:16:17 EST" duration-ms="371" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_Address2 -->
        <test-method signature="employeesFound_ActiveOnly_Department()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:17 EST" name="employeesFound_ActiveOnly_Department" description="PBI:150855" finished-at="2020-02-18T15:16:18 EST" duration-ms="893" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_Department -->
        <test-method signature="employeesFound_ActiveOnly_EmployeeClubId()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:18 EST" name="employeesFound_ActiveOnly_EmployeeClubId" description="PBI:150855" finished-at="2020-02-18T15:16:19 EST" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_EmployeeClubId -->
        <test-method signature="employeesFound_ActiveOnly_FirstName()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:19 EST" name="employeesFound_ActiveOnly_FirstName" description="PBI:150855" finished-at="2020-02-18T15:16:19 EST" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_FirstName -->
        <test-method signature="employeesFound_ActiveOnly_HomePhone()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:19 EST" name="employeesFound_ActiveOnly_HomePhone" description="PBI:150855" finished-at="2020-02-18T15:16:20 EST" duration-ms="471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_HomePhone -->
        <test-method signature="employeesFound_ActiveOnly_LastName()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:20 EST" name="employeesFound_ActiveOnly_LastName" description="PBI:150855" finished-at="2020-02-18T15:16:20 EST" duration-ms="519" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_LastName -->
        <test-method signature="employeesFound_ActiveOnly_PartialAddress1()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:20 EST" name="employeesFound_ActiveOnly_PartialAddress1" description="PBI:150855" finished-at="2020-02-18T15:16:21 EST" duration-ms="1147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_PartialAddress1 -->
        <test-method signature="employeesFound_ActiveOnly_PartialFirstName()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:21 EST" name="employeesFound_ActiveOnly_PartialFirstName" description="PBI:150855" finished-at="2020-02-18T15:16:22 EST" duration-ms="597" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_PartialFirstName -->
        <test-method signature="employeesFound_ActiveOnly_PartialHomePhone()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:22 EST" name="employeesFound_ActiveOnly_PartialHomePhone" description="PBI:150855" finished-at="2020-02-18T15:16:22 EST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_PartialHomePhone -->
        <test-method signature="employeesFound_ActiveOnly_PartialLastName()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:22 EST" name="employeesFound_ActiveOnly_PartialLastName" description="PBI:150855" finished-at="2020-02-18T15:16:23 EST" duration-ms="482" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_PartialLastName -->
        <test-method signature="employeesFound_ActiveOnly_PartialUsername()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:23 EST" name="employeesFound_ActiveOnly_PartialUsername" description="PBI:150855" finished-at="2020-02-18T15:16:23 EST" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_PartialUsername -->
        <test-method signature="employeesFound_ActiveOnly_Username()[pri:0, instance:JonasFitness.API.GetEmployees@4efac082]" started-at="2020-02-18T15:16:23 EST" name="employeesFound_ActiveOnly_Username" description="PBI:150855" finished-at="2020-02-18T15:16:24 EST" duration-ms="467" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- employeesFound_ActiveOnly_Username -->
      </class> <!-- JonasFitness.API.GetEmployees -->
      <class name="JonasFitness.API.GetProductByBook">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetProductByBook@783a467b]" started-at="2020-02-18T15:17:30 EST" name="getData" finished-at="2020-02-18T15:17:30 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ProductFound()[pri:0, instance:JonasFitness.API.GetProductByBook@783a467b]" started-at="2020-02-18T15:17:30 EST" name="ProductFound" description="PBI:138968" finished-at="2020-02-18T15:17:31 EST" duration-ms="676" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductFound -->
        <test-method signature="ProductNotFound()[pri:0, instance:JonasFitness.API.GetProductByBook@783a467b]" started-at="2020-02-18T15:17:31 EST" name="ProductNotFound" description="PBI:138968" finished-at="2020-02-18T15:17:31 EST" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductNotFound -->
      </class> <!-- JonasFitness.API.GetProductByBook -->
      <class name="JonasFitness.API.EnrollMemberInClassWithNewCreditCard">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:49 EST" name="getData" finished-at="2020-02-18T15:06:49 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="cardExpired()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:49 EST" name="cardExpired" description="PBI:146579" finished-at="2020-02-18T15:06:50 EST" duration-ms="1942" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cardExpired -->
        <test-method signature="cardNumberInvalid()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:50 EST" name="cardNumberInvalid" description="PBI:146579" finished-at="2020-02-18T15:06:52 EST" duration-ms="1213" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cardNumberInvalid -->
        <test-method signature="cardNumberLengthIncorrect()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:52 EST" name="cardNumberLengthIncorrect" description="PBI:146579" finished-at="2020-02-18T15:06:53 EST" duration-ms="1176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cardNumberLengthIncorrect -->
        <test-method signature="classEnded()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:53 EST" name="classEnded" description="PBI:146579" finished-at="2020-02-18T15:06:54 EST" duration-ms="933" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classEnded -->
        <test-method signature="classNotAvailableOnline()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:54 EST" name="classNotAvailableOnline" description="PBI:146579" finished-at="2020-02-18T15:06:55 EST" duration-ms="912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotAvailableOnline -->
        <test-method signature="classNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:55 EST" name="classNotFound" description="PBI:146579" finished-at="2020-02-18T15:06:55 EST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound -->
        <test-method signature="classOccurrenceNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:55 EST" name="classOccurrenceNotFound" description="PBI:146579" finished-at="2020-02-18T15:06:56 EST" duration-ms="670" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classOccurrenceNotFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:56 EST" name="customerNotFound" description="PBI:146579" finished-at="2020-02-18T15:06:56 EST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="memberAlreadyEnrolled()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:56 EST" name="memberAlreadyEnrolled" description="PBI:146579" finished-at="2020-02-18T15:06:57 EST" duration-ms="916" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyEnrolled -->
        <test-method signature="memberAlreadyOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:57 EST" name="memberAlreadyOnStandby" description="PBI:146579" finished-at="2020-02-18T15:06:58 EST" duration-ms="887" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyOnStandby -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:06:58 EST" name="memberEnrolledOnStandby" description="PBI:146579" finished-at="2020-02-18T15:07:14 EST" duration-ms="15905" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolled_FreeClass()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:07:14 EST" name="memberEnrolled_FreeClass" description="PBI:146579" finished-at="2020-02-18T15:07:33 EST" duration-ms="19378" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolled_FreeClass -->
        <test-method signature="memberEnrolled_FreeClassCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:07:33 EST" name="memberEnrolled_FreeClassCollectionsMember" description="PBI:146579" finished-at="2020-02-18T15:07:49 EST" duration-ms="15999" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolled_FreeClassCollectionsMember -->
        <test-method signature="memberEnrolled_PaidClass()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:07:49 EST" name="memberEnrolled_PaidClass" description="PBI:146579" finished-at="2020-02-18T15:08:06 EST" duration-ms="16267" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolled_PaidClass -->
        <test-method signature="memberNotEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:06 EST" name="memberNotEnrolledOnStandby" description="PBI:146579" finished-at="2020-02-18T15:08:07 EST" duration-ms="1006" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberNotEnrolledOnStandby -->
        <test-method signature="missingAddressLine1()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:07 EST" name="missingAddressLine1" description="PBI:146579" finished-at="2020-02-18T15:08:07 EST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingAddressLine1 -->
        <test-method signature="missingCardNumber()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:07 EST" name="missingCardNumber" description="PBI:146579" finished-at="2020-02-18T15:08:07 EST" duration-ms="206" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingCardNumber -->
        <test-method signature="missingCity()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:07 EST" name="missingCity" description="PBI:146579" finished-at="2020-02-18T15:08:08 EST" duration-ms="396" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingCity -->
        <test-method signature="missingMemberNameOnCard()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:08 EST" name="missingMemberNameOnCard" description="PBI:146579" finished-at="2020-02-18T15:08:08 EST" duration-ms="198" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingMemberNameOnCard -->
        <test-method signature="missingPostalCode()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:08 EST" name="missingPostalCode" description="PBI:146579" finished-at="2020-02-18T15:08:08 EST" duration-ms="400" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingPostalCode -->
        <test-method signature="missingSecurityCode()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:08 EST" name="missingSecurityCode" description="PBI:146579" finished-at="2020-02-18T15:08:08 EST" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingSecurityCode -->
        <test-method signature="missingStateProvince()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:08 EST" name="missingStateProvince" description="PBI:146579" finished-at="2020-02-18T15:08:09 EST" duration-ms="197" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- missingStateProvince -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithNewCreditCard@49049a04]" started-at="2020-02-18T15:08:09 EST" name="productPriceChanged" description="PBI:146579" finished-at="2020-02-18T15:08:10 EST" duration-ms="1001" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
      </class> <!-- JonasFitness.API.EnrollMemberInClassWithNewCreditCard -->
      <class name="JonasFitness.API.GetScheduleByBook">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetScheduleByBook@73e9cf30]" started-at="2020-02-18T15:17:33 EST" name="getData" finished-at="2020-02-18T15:17:33 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="AppointmentsNotFound()[pri:0, instance:JonasFitness.API.GetScheduleByBook@73e9cf30]" started-at="2020-02-18T15:17:33 EST" name="AppointmentsNotFound" description="PBI:140730" finished-at="2020-02-18T15:17:33 EST" duration-ms="618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsNotFound -->
        <test-method signature="ClassesNotFound()[pri:0, instance:JonasFitness.API.GetScheduleByBook@73e9cf30]" started-at="2020-02-18T15:17:33 EST" name="ClassesNotFound" description="PBI:140730" finished-at="2020-02-18T15:17:34 EST" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassesNotFound -->
        <test-method signature="GetAppointments()[pri:0, instance:JonasFitness.API.GetScheduleByBook@73e9cf30]" started-at="2020-02-18T15:17:34 EST" name="GetAppointments" description="PBI:140730" finished-at="2020-02-18T15:17:46 EST" duration-ms="11885" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetAppointments -->
        <test-method signature="GetClasses()[pri:0, instance:JonasFitness.API.GetScheduleByBook@73e9cf30]" started-at="2020-02-18T15:17:46 EST" name="GetClasses" description="PBI:140730" finished-at="2020-02-18T15:17:47 EST" duration-ms="888" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- GetClasses -->
        <test-method signature="invalidDateRange()[pri:0, instance:JonasFitness.API.GetScheduleByBook@73e9cf30]" started-at="2020-02-18T15:17:47 EST" name="invalidDateRange" description="PBI:140730" finished-at="2020-02-18T15:17:50 EST" duration-ms="3345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDateRange -->
        <test-method signature="pastDateRange()[pri:0, instance:JonasFitness.API.GetScheduleByBook@73e9cf30]" started-at="2020-02-18T15:17:50 EST" name="pastDateRange" description="PBI:140730" finished-at="2020-02-18T15:17:51 EST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- pastDateRange -->
      </class> <!-- JonasFitness.API.GetScheduleByBook -->
      <class name="JonasFitness.API.EnrollMemberInClassOnAccount">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:00:56 EST" name="getData" finished-at="2020-02-18T15:00:56 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="classEnded()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:00:56 EST" name="classEnded" description="PBI:143588" finished-at="2020-02-18T15:00:57 EST" duration-ms="1066" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classEnded -->
        <test-method signature="classEnrollmentClosed()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:00:57 EST" name="classEnrollmentClosed" description="PBI:143588" finished-at="2020-02-18T15:00:58 EST" duration-ms="1046" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classEnrollmentClosed -->
        <test-method signature="classNotAvailableOnline()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:00:58 EST" name="classNotAvailableOnline" description="PBI:143588" finished-at="2020-02-18T15:00:59 EST" duration-ms="943" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotAvailableOnline -->
        <test-method signature="classNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:00:59 EST" name="classNotFound" description="PBI:143588" finished-at="2020-02-18T15:00:59 EST" duration-ms="599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound -->
        <test-method signature="creditLimitedExceeded()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:00:59 EST" name="creditLimitedExceeded" description="PBI:143588" finished-at="2020-02-18T15:01:00 EST" duration-ms="1161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- creditLimitedExceeded -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:00 EST" name="customerNotFound" description="PBI:143588" finished-at="2020-02-18T15:01:01 EST" duration-ms="355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="enrollmentNotAllowedCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:01 EST" name="enrollmentNotAllowedCollectionsMember" description="PBI:143588" finished-at="2020-02-18T15:01:02 EST" duration-ms="1205" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedCollectionsMember -->
        <test-method signature="enrollmentNotAllowedFrozenMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:02 EST" name="enrollmentNotAllowedFrozenMember" description="PBI:143588" finished-at="2020-02-18T15:01:03 EST" duration-ms="900" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedFrozenMember -->
        <test-method signature="enrollmentNotAllowedProspectMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:03 EST" name="enrollmentNotAllowedProspectMember" description="PBI:143588" finished-at="2020-02-18T15:01:04 EST" duration-ms="1060" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedProspectMember -->
        <test-method signature="enrollmentNotAllowedTerminatedMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:04 EST" name="enrollmentNotAllowedTerminatedMember" description="PBI:143588" finished-at="2020-02-18T15:01:05 EST" duration-ms="1070" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedTerminatedMember -->
        <test-method signature="enrollmentNotOpen()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:05 EST" name="enrollmentNotOpen" description="PBI:143588" finished-at="2020-02-18T15:01:06 EST" duration-ms="992" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotOpen -->
        <test-method signature="memberAlreadyEnrolled()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:06 EST" name="memberAlreadyEnrolled" description="PBI:143588" finished-at="2020-02-18T15:01:08 EST" duration-ms="1743" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyEnrolled -->
        <test-method signature="memberAlreadyOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:08 EST" name="memberAlreadyOnStandby" description="PBI:143588" finished-at="2020-02-18T15:01:09 EST" duration-ms="1424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyOnStandby -->
        <test-method signature="memberEnrolledFreeClass()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:09 EST" name="memberEnrolledFreeClass" description="PBI:143588" finished-at="2020-02-18T15:01:26 EST" duration-ms="16395" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeClass -->
        <test-method signature="memberEnrolledFreeClassCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:26 EST" name="memberEnrolledFreeClassCollectionsMember" description="PBI:143588" finished-at="2020-02-18T15:01:42 EST" duration-ms="16555" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeClassCollectionsMember -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:42 EST" name="memberEnrolledOnStandby" description="PBI:143588" finished-at="2020-02-18T15:01:58 EST" duration-ms="15950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolledPaidClassNotStarted()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:01:58 EST" name="memberEnrolledPaidClassNotStarted" description="PBI:143588" finished-at="2020-02-18T15:02:14 EST" duration-ms="16132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidClassNotStarted -->
        <test-method signature="memberEnrolledPaidClassStarted()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:02:14 EST" name="memberEnrolledPaidClassStarted" description="PBI:143588" finished-at="2020-02-18T15:02:31 EST" duration-ms="17104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidClassStarted -->
        <test-method signature="memberNotEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:02:31 EST" name="memberNotEnrolledOnStandby" description="PBI:143588" finished-at="2020-02-18T15:02:32 EST" duration-ms="964" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberNotEnrolledOnStandby -->
        <test-method signature="noFOP_AccountProblem()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:02:32 EST" name="noFOP_AccountProblem" description="PBI:143588" finished-at="2020-02-18T15:02:33 EST" duration-ms="1019" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noFOP_AccountProblem -->
        <test-method signature="occurrenceNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:02:33 EST" name="occurrenceNotFound" description="PBI:143588" finished-at="2020-02-18T15:02:34 EST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occurrenceNotFound -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:02:34 EST" name="productPriceChanged" description="PBI:143588" finished-at="2020-02-18T15:02:35 EST" duration-ms="968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
        <test-method signature="schedulingConflict()[pri:0, instance:JonasFitness.API.EnrollMemberInClassOnAccount@12aba8be]" started-at="2020-02-18T15:02:35 EST" name="schedulingConflict" description="PBI:143588" finished-at="2020-02-18T15:02:36 EST" duration-ms="1211" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- schedulingConflict -->
      </class> <!-- JonasFitness.API.EnrollMemberInClassOnAccount -->
      <class name="JonasFitness.API.VerifyClassEnrollmentCapability">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:16 EST" name="getData" finished-at="2020-02-18T15:18:16 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="classEnded()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:16 EST" name="classEnded" description="PBI:150003" finished-at="2020-02-18T15:18:17 EST" duration-ms="955" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classEnded -->
        <test-method signature="classEnrollmentClosed()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:17 EST" name="classEnrollmentClosed" description="PBI:150003" finished-at="2020-02-18T15:18:18 EST" duration-ms="792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classEnrollmentClosed -->
        <test-method signature="classFullStandbyAllowed()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:18 EST" name="classFullStandbyAllowed" description="PBI:150003" finished-at="2020-02-18T15:18:19 EST" duration-ms="853" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classFullStandbyAllowed -->
        <test-method signature="customerAlreadyEnrolled()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:19 EST" name="customerAlreadyEnrolled" description="PBI:150003" finished-at="2020-02-18T15:18:20 EST" duration-ms="857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerAlreadyEnrolled -->
        <test-method signature="customerAlreadyOnStandby()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:20 EST" name="customerAlreadyOnStandby" description="PBI:150003" finished-at="2020-02-18T15:18:21 EST" duration-ms="794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerAlreadyOnStandby -->
        <test-method signature="enrollmentCapabilityVerified()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:21 EST" name="enrollmentCapabilityVerified" description="PBI:150003" finished-at="2020-02-18T15:18:22 EST" duration-ms="884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentCapabilityVerified -->
        <test-method signature="enrollmentNotAllowedFrozenMember()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:22 EST" name="enrollmentNotAllowedFrozenMember" description="PBI:150003" finished-at="2020-02-18T15:18:22 EST" duration-ms="782" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedFrozenMember -->
        <test-method signature="enrollmentNotAllowedItem()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:22 EST" name="enrollmentNotAllowedItem" description="PBI:150003" finished-at="2020-02-18T15:18:23 EST" duration-ms="777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedItem -->
        <test-method signature="enrollmentNotAllowedTerminatedMember()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:23 EST" name="enrollmentNotAllowedTerminatedMember" description="PBI:150003" finished-at="2020-02-18T15:18:24 EST" duration-ms="776" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedTerminatedMember -->
        <test-method signature="invalidClassBarcodeId()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:24 EST" name="invalidClassBarcodeId" description="PBI:150003" finished-at="2020-02-18T15:18:24 EST" duration-ms="506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidClassBarcodeId -->
        <test-method signature="invalidCustomerId()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:24 EST" name="invalidCustomerId" description="PBI:150003" finished-at="2020-02-18T15:18:25 EST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCustomerId -->
        <test-method signature="invalidOccurrence()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:25 EST" name="invalidOccurrence" description="PBI:150003" finished-at="2020-02-18T15:18:25 EST" duration-ms="459" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidOccurrence -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:25 EST" name="productPriceChanged" description="PBI:150003" finished-at="2020-02-18T15:18:26 EST" duration-ms="841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
        <test-method signature="schedulingConflict()[pri:0, instance:JonasFitness.API.VerifyClassEnrollmentCapability@942a29c]" started-at="2020-02-18T15:18:26 EST" name="schedulingConflict" description="PBI:150003" finished-at="2020-02-18T15:18:27 EST" duration-ms="836" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- schedulingConflict -->
      </class> <!-- JonasFitness.API.VerifyClassEnrollmentCapability -->
      <class name="JonasFitness.API.EnrollMemberInCourseWithNewCreditCard">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:08:10 EST" name="getData" finished-at="2020-02-18T15:08:10 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="cardExpired()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:08:10 EST" name="cardExpired" description="PBI:146580" finished-at="2020-02-18T15:08:11 EST" duration-ms="1471" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cardExpired -->
        <test-method signature="cardNumberInvalid()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:08:11 EST" name="cardNumberInvalid" description="PBI:146580" finished-at="2020-02-18T15:08:12 EST" duration-ms="1124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cardNumberInvalid -->
        <test-method signature="cardNumberLengthIncorrect()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:08:12 EST" name="cardNumberLengthIncorrect" description="PBI:146580" finished-at="2020-02-18T15:08:13 EST" duration-ms="1221" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cardNumberLengthIncorrect -->
        <test-method signature="courseNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:08:13 EST" name="courseNotFound" description="PBI:146580" finished-at="2020-02-18T15:08:14 EST" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotFound -->
        <test-method signature="memberEnrolledFreeCourse()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:08:14 EST" name="memberEnrolledFreeCourse" description="PBI:146580" finished-at="2020-02-18T15:08:30 EST" duration-ms="16407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourse -->
        <test-method signature="memberEnrolledFreeCourseCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:08:30 EST" name="memberEnrolledFreeCourseCollectionsMember" description="PBI:146580" finished-at="2020-02-18T15:08:46 EST" duration-ms="15906" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourseCollectionsMember -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:08:46 EST" name="memberEnrolledOnStandby" description="PBI:146580" finished-at="2020-02-18T15:09:02 EST" duration-ms="16079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolledPaidCourse()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:09:02 EST" name="memberEnrolledPaidCourse" description="PBI:146580" finished-at="2020-02-18T15:09:19 EST" duration-ms="17062" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidCourse -->
        <test-method signature="memberNotEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithNewCreditCard@71a8adcf]" started-at="2020-02-18T15:09:19 EST" name="memberNotEnrolledOnStandby" description="PBI:146580" finished-at="2020-02-18T15:09:20 EST" duration-ms="939" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberNotEnrolledOnStandby -->
      </class> <!-- JonasFitness.API.EnrollMemberInCourseWithNewCreditCard -->
      <class name="JonasFitness.API.SearchOnlineMembersByProduct">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:08 EST" name="getData" finished-at="2020-02-18T15:18:08 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="searchOnlineMembers_Email()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:08 EST" name="searchOnlineMembers_Email" description="PBI:139723" finished-at="2020-02-18T15:18:09 EST" duration-ms="822" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_Email -->
        <test-method signature="searchOnlineMembers_FirstLastName()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:09 EST" name="searchOnlineMembers_FirstLastName" description="PBI:139723" finished-at="2020-02-18T15:18:10 EST" duration-ms="590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_FirstLastName -->
        <test-method signature="searchOnlineMembers_FirstName()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:10 EST" name="searchOnlineMembers_FirstName" description="PBI:139723" finished-at="2020-02-18T15:18:10 EST" duration-ms="780" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_FirstName -->
        <test-method signature="searchOnlineMembers_HomePhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:10 EST" name="searchOnlineMembers_HomePhoneNoDashes" description="PBI:139723" finished-at="2020-02-18T15:18:11 EST" duration-ms="972" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_HomePhoneNoDashes -->
        <test-method signature="searchOnlineMembers_HomePhoneWithDashes()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:11 EST" name="searchOnlineMembers_HomePhoneWithDashes" description="PBI:139723" finished-at="2020-02-18T15:18:12 EST" duration-ms="603" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_HomePhoneWithDashes -->
        <test-method signature="searchOnlineMembers_LastFirstName()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:12 EST" name="searchOnlineMembers_LastFirstName" description="PBI:139723" finished-at="2020-02-18T15:18:13 EST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_LastFirstName -->
        <test-method signature="searchOnlineMembers_LastName()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:13 EST" name="searchOnlineMembers_LastName" description="PBI:139723" finished-at="2020-02-18T15:18:13 EST" duration-ms="632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_LastName -->
        <test-method signature="searchOnlineMembers_MobilePhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:13 EST" name="searchOnlineMembers_MobilePhoneNoDashes" description="PBI:139723" finished-at="2020-02-18T15:18:14 EST" duration-ms="602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_MobilePhoneNoDashes -->
        <test-method signature="searchOnlineMembers_MobilePhoneWithDashes()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:14 EST" name="searchOnlineMembers_MobilePhoneWithDashes" description="PBI:139723" finished-at="2020-02-18T15:18:15 EST" duration-ms="766" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_MobilePhoneWithDashes -->
        <test-method signature="searchOnlineMembers_WorkPhone()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@3f6f6701]" started-at="2020-02-18T15:18:15 EST" name="searchOnlineMembers_WorkPhone" description="PBI:139723" finished-at="2020-02-18T15:18:15 EST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchOnlineMembers_WorkPhone -->
      </class> <!-- JonasFitness.API.SearchOnlineMembersByProduct -->
      <class name="JonasFitness.API.BookAppointmentByEmployee">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:13 EST" name="getData" finished-at="2020-02-18T15:00:13 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="FreeAppointment_SingleMember()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:13 EST" name="FreeAppointment_SingleMember" description="PBI:146227" finished-at="2020-02-18T15:00:16 EST" duration-ms="3286" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FreeAppointment_SingleMember -->
        <test-method signature="PaidAppointment_MultipleMember()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:16 EST" name="PaidAppointment_MultipleMember" description="PBI:146227" finished-at="2020-02-18T15:00:22 EST" duration-ms="5491" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaidAppointment_MultipleMember -->
        <test-method signature="PaidAppointment_SingleMember()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:22 EST" name="PaidAppointment_SingleMember" description="PBI:146227" finished-at="2020-02-18T15:00:28 EST" duration-ms="5890" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaidAppointment_SingleMember -->
        <test-method signature="appointmentNotFound()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:28 EST" name="appointmentNotFound" description="PBI:146227" finished-at="2020-02-18T15:00:28 EST" duration-ms="577" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appointmentNotFound -->
        <test-method signature="notEnoughPunches()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:28 EST" name="notEnoughPunches" description="PBI:146227" finished-at="2020-02-18T15:00:31 EST" duration-ms="2605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notEnoughPunches -->
        <test-method signature="notValidBookableItem()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:31 EST" name="notValidBookableItem" description="PBI:146227" finished-at="2020-02-18T15:00:32 EST" duration-ms="878" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notValidBookableItem -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:32 EST" name="productPriceChanged" description="PBI:146227" finished-at="2020-02-18T15:00:33 EST" duration-ms="837" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
        <test-method signature="punchcardAppointment_SingleMember()[pri:0, instance:JonasFitness.API.BookAppointmentByEmployee@7bab3f1a]" started-at="2020-02-18T15:00:33 EST" name="punchcardAppointment_SingleMember" description="PBI:146227" finished-at="2020-02-18T15:00:35 EST" duration-ms="2719" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- punchcardAppointment_SingleMember -->
      </class> <!-- JonasFitness.API.BookAppointmentByEmployee -->
      <class name="JonasFitness.API.EnrollMemberInClassWithCardOnFile">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:11 EST" name="getData" finished-at="2020-02-18T15:04:11 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="classEnded()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:11 EST" name="classEnded" description="PBI:146577" finished-at="2020-02-18T15:04:12 EST" duration-ms="1102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classEnded -->
        <test-method signature="classNotAvailableOnline()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:12 EST" name="classNotAvailableOnline" description="PBI:146577" finished-at="2020-02-18T15:04:13 EST" duration-ms="897" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotAvailableOnline -->
        <test-method signature="classNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:13 EST" name="classNotFound" description="PBI:146577" finished-at="2020-02-18T15:04:14 EST" duration-ms="583" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound -->
        <test-method signature="classOccurrenceNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:14 EST" name="classOccurrenceNotFound" description="PBI:146577" finished-at="2020-02-18T15:04:14 EST" duration-ms="591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classOccurrenceNotFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:14 EST" name="customerNotFound" description="PBI:146577" finished-at="2020-02-18T15:04:15 EST" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="memberAlreadyEnrolled()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:15 EST" name="memberAlreadyEnrolled" description="PBI:146577" finished-at="2020-02-18T15:04:16 EST" duration-ms="910" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyEnrolled -->
        <test-method signature="memberAlreadyOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:16 EST" name="memberAlreadyOnStandby" description="PBI:146577" finished-at="2020-02-18T15:04:16 EST" duration-ms="896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyOnStandby -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:16 EST" name="memberEnrolledOnStandby" description="PBI:146577" finished-at="2020-02-18T15:04:33 EST" duration-ms="16335" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolled_FreeClass()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:33 EST" name="memberEnrolled_FreeClass" description="PBI:146577" finished-at="2020-02-18T15:04:49 EST" duration-ms="16551" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolled_FreeClass -->
        <test-method signature="memberEnrolled_FreeClassCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:04:49 EST" name="memberEnrolled_FreeClassCollectionsMember" description="PBI:146577" finished-at="2020-02-18T15:05:06 EST" duration-ms="16413" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolled_FreeClassCollectionsMember -->
        <test-method signature="memberEnrolled_PaidClass()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:05:06 EST" name="memberEnrolled_PaidClass" description="PBI:146577" finished-at="2020-02-18T15:05:24 EST" duration-ms="18453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolled_PaidClass -->
        <test-method signature="memberNotEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:05:24 EST" name="memberNotEnrolledOnStandby" description="PBI:146577" finished-at="2020-02-18T15:05:26 EST" duration-ms="1638" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberNotEnrolledOnStandby -->
        <test-method signature="noFOP_AccountProblem()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:05:26 EST" name="noFOP_AccountProblem" description="PBI:146577" finished-at="2020-02-18T15:05:28 EST" duration-ms="1873" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noFOP_AccountProblem -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:05:28 EST" name="productPriceChanged" description="PBI:146577" finished-at="2020-02-18T15:05:29 EST" duration-ms="1115" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
        <test-method signature="schedulingConflict()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithCardOnFile@67f639d3]" started-at="2020-02-18T15:05:29 EST" name="schedulingConflict" description="PBI:146577" finished-at="2020-02-18T15:05:30 EST" duration-ms="1079" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- schedulingConflict -->
      </class> <!-- JonasFitness.API.EnrollMemberInClassWithCardOnFile -->
      <class name="JonasFitness.API.GetAvailableAppointments">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAvailableAppointments@2dc54ad4]" started-at="2020-02-18T15:15:27 EST" name="getData" finished-at="2020-02-18T15:15:27 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="AppointmentsFound_NoResources()[pri:0, instance:JonasFitness.API.GetAvailableAppointments@2dc54ad4]" started-at="2020-02-18T15:15:27 EST" name="AppointmentsFound_NoResources" description="PBI:127498" finished-at="2020-02-18T15:15:28 EST" duration-ms="1894" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsFound_NoResources -->
        <test-method signature="AppointmentsFound_WithResources()[pri:0, instance:JonasFitness.API.GetAvailableAppointments@2dc54ad4]" started-at="2020-02-18T15:15:28 EST" name="AppointmentsFound_WithResources" description="PBI:127498" finished-at="2020-02-18T15:15:30 EST" duration-ms="1254" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsFound_WithResources -->
        <test-method signature="AppointmentsNotFound()[pri:0, instance:JonasFitness.API.GetAvailableAppointments@2dc54ad4]" started-at="2020-02-18T15:15:30 EST" name="AppointmentsNotFound" description="PBI:127498" finished-at="2020-02-18T15:15:31 EST" duration-ms="1058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsNotFound -->
      </class> <!-- JonasFitness.API.GetAvailableAppointments -->
      <class name="JonasFitness.API.GetAppointmentDetails">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentDetails@26e356f0]" started-at="2020-02-18T15:15:09 EST" name="getData" finished-at="2020-02-18T15:15:09 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="AppointmentsFound()[pri:0, instance:JonasFitness.API.GetAppointmentDetails@26e356f0]" started-at="2020-02-18T15:15:09 EST" name="AppointmentsFound" description="PBI:139310" finished-at="2020-02-18T15:15:11 EST" duration-ms="2253" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsFound -->
        <test-method signature="AppointmentsNotFound()[pri:0, instance:JonasFitness.API.GetAppointmentDetails@26e356f0]" started-at="2020-02-18T15:15:11 EST" name="AppointmentsNotFound" description="PBI:139310" finished-at="2020-02-18T15:15:12 EST" duration-ms="439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsNotFound -->
      </class> <!-- JonasFitness.API.GetAppointmentDetails -->
      <class name="JonasFitness.API.GetClassCoursePricing">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetClassCoursePricing@4c1909a3]" started-at="2020-02-18T15:15:37 EST" name="getData" finished-at="2020-02-18T15:15:37 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.GetClassCoursePricing@4c1909a3]" started-at="2020-02-18T15:15:37 EST" name="customerNotFound" description="PBI:155543" finished-at="2020-02-18T15:15:38 EST" duration-ms="590" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="itemFound_Club2()[pri:0, instance:JonasFitness.API.GetClassCoursePricing@4c1909a3]" started-at="2020-02-18T15:15:38 EST" name="itemFound_Club2" description="PBI:155543" finished-at="2020-02-18T15:15:40 EST" duration-ms="1709" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_Club2 -->
        <test-method signature="itemFound_FreeItem()[pri:0, instance:JonasFitness.API.GetClassCoursePricing@4c1909a3]" started-at="2020-02-18T15:15:40 EST" name="itemFound_FreeItem" description="PBI:155543" finished-at="2020-02-18T15:15:41 EST" duration-ms="1651" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_FreeItem -->
        <test-method signature="itemFound_MultipleTaxes()[pri:0, instance:JonasFitness.API.GetClassCoursePricing@4c1909a3]" started-at="2020-02-18T15:15:41 EST" name="itemFound_MultipleTaxes" description="PBI:155543" finished-at="2020-02-18T15:15:43 EST" duration-ms="1745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_MultipleTaxes -->
        <test-method signature="itemFound_NoTax()[pri:0, instance:JonasFitness.API.GetClassCoursePricing@4c1909a3]" started-at="2020-02-18T15:15:43 EST" name="itemFound_NoTax" description="PBI:155543" finished-at="2020-02-18T15:15:45 EST" duration-ms="1839" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_NoTax -->
        <test-method signature="itemFound_SingleTax()[pri:0, instance:JonasFitness.API.GetClassCoursePricing@4c1909a3]" started-at="2020-02-18T15:15:45 EST" name="itemFound_SingleTax" description="PBI:155543" finished-at="2020-02-18T15:15:47 EST" duration-ms="1642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemFound_SingleTax -->
        <test-method signature="itemNotFound()[pri:0, instance:JonasFitness.API.GetClassCoursePricing@4c1909a3]" started-at="2020-02-18T15:15:47 EST" name="itemNotFound" description="PBI:155543" finished-at="2020-02-18T15:15:47 EST" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- itemNotFound -->
      </class> <!-- JonasFitness.API.GetClassCoursePricing -->
      <class name="JonasFitness.API.CancelAppointmentByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.CancelAppointmentByMember@1e1a0406]" started-at="2020-02-18T15:00:51 EST" name="getData" finished-at="2020-02-18T15:00:51 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ApptNotFound()[pri:0, instance:JonasFitness.API.CancelAppointmentByMember@1e1a0406]" started-at="2020-02-18T15:00:51 EST" name="ApptNotFound" description="PBI:141862" finished-at="2020-02-18T15:00:51 EST" duration-ms="599" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApptNotFound -->
      </class> <!-- JonasFitness.API.CancelAppointmentByMember -->
      <class name="JonasFitness.API.GetMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetMember@506ae4d4]" started-at="2020-02-18T15:16:45 EST" name="getData" finished-at="2020-02-18T15:16:45 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="MemberFoundAccountLocked()[pri:0, instance:JonasFitness.API.GetMember@506ae4d4]" started-at="2020-02-18T15:16:45 EST" name="MemberFoundAccountLocked" description="PBI:124934" finished-at="2020-02-18T15:16:46 EST" duration-ms="950" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberFoundAccountLocked -->
        <test-method signature="MemberFoundActiveHOH()[pri:0, instance:JonasFitness.API.GetMember@506ae4d4]" started-at="2020-02-18T15:16:46 EST" name="MemberFoundActiveHOH" description="PBI:124934" finished-at="2020-02-18T15:16:47 EST" duration-ms="794" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberFoundActiveHOH -->
        <test-method signature="MemberFoundCollectionsMember()[pri:0, instance:JonasFitness.API.GetMember@506ae4d4]" started-at="2020-02-18T15:16:47 EST" name="MemberFoundCollectionsMember" description="PBI:124934" finished-at="2020-02-18T15:16:47 EST" duration-ms="945" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberFoundCollectionsMember -->
        <test-method signature="MemberFoundFrozenMember()[pri:0, instance:JonasFitness.API.GetMember@506ae4d4]" started-at="2020-02-18T15:16:47 EST" name="MemberFoundFrozenMember" description="PBI:124934" finished-at="2020-02-18T15:16:48 EST" duration-ms="773" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberFoundFrozenMember -->
        <test-method signature="MemberFoundProspectMember()[pri:0, instance:JonasFitness.API.GetMember@506ae4d4]" started-at="2020-02-18T15:16:48 EST" name="MemberFoundProspectMember" description="PBI:124934" finished-at="2020-02-18T15:16:49 EST" duration-ms="958" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberFoundProspectMember -->
        <test-method signature="MemberFoundTerminatedMember()[pri:0, instance:JonasFitness.API.GetMember@506ae4d4]" started-at="2020-02-18T15:16:49 EST" name="MemberFoundTerminatedMember" description="PBI:124934" finished-at="2020-02-18T15:16:50 EST" duration-ms="1087" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberFoundTerminatedMember -->
        <test-method signature="MemberNotFound()[pri:0, instance:JonasFitness.API.GetMember@506ae4d4]" started-at="2020-02-18T15:16:50 EST" name="MemberNotFound" description="PBI:124934" finished-at="2020-02-18T15:16:51 EST" duration-ms="538" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberNotFound -->
      </class> <!-- JonasFitness.API.GetMember -->
      <class name="JonasFitness.API.GetAvailableResourceTypesByClub">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAvailableResourceTypesByClub@4659191b]" started-at="2020-02-18T15:15:31 EST" name="getData" finished-at="2020-02-18T15:15:31 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ResourceTypesFound()[pri:0, instance:JonasFitness.API.GetAvailableResourceTypesByClub@4659191b]" started-at="2020-02-18T15:15:31 EST" name="ResourceTypesFound" description="PBI:138961" finished-at="2020-02-18T15:15:32 EST" duration-ms="997" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceTypesFound -->
        <test-method signature="ResourceTypesNotFound()[pri:0, instance:JonasFitness.API.GetAvailableResourceTypesByClub@4659191b]" started-at="2020-02-18T15:15:32 EST" name="ResourceTypesNotFound" description="PBI:138961" finished-at="2020-02-18T15:15:32 EST" duration-ms="356" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ResourceTypesNotFound -->
      </class> <!-- JonasFitness.API.GetAvailableResourceTypesByClub -->
      <class name="JonasFitness.API.GetClassesAndCoursesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByMember@d9345cd]" started-at="2020-02-18T15:15:54 EST" name="getData" finished-at="2020-02-18T15:15:54 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ClassesCoursesNotFound()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByMember@d9345cd]" started-at="2020-02-18T15:15:54 EST" name="ClassesCoursesNotFound" description="PBI:124953" finished-at="2020-02-18T15:15:55 EST" duration-ms="621" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassesCoursesNotFound -->
        <test-method signature="ClassesFound()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByMember@d9345cd]" started-at="2020-02-18T15:15:55 EST" name="ClassesFound" description="PBI:124953" finished-at="2020-02-18T15:15:58 EST" duration-ms="3188" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassesFound -->
        <test-method signature="CoursesFound()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByMember@d9345cd]" started-at="2020-02-18T15:15:58 EST" name="CoursesFound" description="PBI:124953" finished-at="2020-02-18T15:15:59 EST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CoursesFound -->
        <test-method signature="invalidClassCourse()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByMember@d9345cd]" started-at="2020-02-18T15:15:59 EST" name="invalidClassCourse" description="PBI:124953" finished-at="2020-02-18T15:15:59 EST" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidClassCourse -->
        <test-method signature="invalidDateRange()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByMember@d9345cd]" started-at="2020-02-18T15:15:59 EST" name="invalidDateRange" description="PBI:124953" finished-at="2020-02-18T15:16:00 EST" duration-ms="352" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDateRange -->
      </class> <!-- JonasFitness.API.GetClassesAndCoursesByMember -->
      <class name="JonasFitness.API.SearchMembersByProduct">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:00 EST" name="getData" finished-at="2020-02-18T15:18:00 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="Email()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:00 EST" name="Email" description="PBI:139726" finished-at="2020-02-18T15:18:00 EST" duration-ms="682" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Email -->
        <test-method signature="FirstLastName()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:00 EST" name="FirstLastName" description="PBI:139726" finished-at="2020-02-18T15:18:01 EST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstLastName -->
        <test-method signature="FirstName()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:01 EST" name="FirstName" description="PBI:139726" finished-at="2020-02-18T15:18:02 EST" duration-ms="700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstName -->
        <test-method signature="HomePhoneWithDashes()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:02 EST" name="HomePhoneWithDashes" description="PBI:139726" finished-at="2020-02-18T15:18:05 EST" duration-ms="3498" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomePhoneWithDashes -->
        <test-method signature="HomePhoneWithoutDashes()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:05 EST" name="HomePhoneWithoutDashes" description="PBI:139726" finished-at="2020-02-18T15:18:06 EST" duration-ms="578" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HomePhoneWithoutDashes -->
        <test-method signature="LastFirstName()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:06 EST" name="LastFirstName" description="PBI:139726" finished-at="2020-02-18T15:18:06 EST" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LastFirstName -->
        <test-method signature="LastName()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:06 EST" name="LastName" description="PBI:139726" finished-at="2020-02-18T15:18:07 EST" duration-ms="610" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LastName -->
        <test-method signature="MobilePhoneWithDashes()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:07 EST" name="MobilePhoneWithDashes" description="PBI:139726" finished-at="2020-02-18T15:18:07 EST" duration-ms="494" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilePhoneWithDashes -->
        <test-method signature="MobilePhoneWithoutDashes()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:07 EST" name="MobilePhoneWithoutDashes" description="PBI:139726" finished-at="2020-02-18T15:18:08 EST" duration-ms="469" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilePhoneWithoutDashes -->
        <test-method signature="WorkPhoneWithDashes()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@242b836]" started-at="2020-02-18T15:18:08 EST" name="WorkPhoneWithDashes" description="PBI:139726" finished-at="2020-02-18T15:18:08 EST" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WorkPhoneWithDashes -->
      </class> <!-- JonasFitness.API.SearchMembersByProduct -->
      <class name="JonasFitness.API.SearchMembers">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:53 EST" name="getData" finished-at="2020-02-18T15:17:53 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="searchMembers_Email()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:53 EST" name="searchMembers_Email" description="PBI:124130" finished-at="2020-02-18T15:17:54 EST" duration-ms="751" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_Email -->
        <test-method signature="searchMembers_FirstName()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:54 EST" name="searchMembers_FirstName" description="PBI:124130" finished-at="2020-02-18T15:17:55 EST" duration-ms="807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_FirstName -->
        <test-method signature="searchMembers_HomePhoneDashes()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:55 EST" name="searchMembers_HomePhoneDashes" description="PBI:124130" finished-at="2020-02-18T15:17:55 EST" duration-ms="552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_HomePhoneDashes -->
        <test-method signature="searchMembers_HomePhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:55 EST" name="searchMembers_HomePhoneNoDashes" description="PBI:124130" finished-at="2020-02-18T15:17:56 EST" duration-ms="545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_HomePhoneNoDashes -->
        <test-method signature="searchMembers_LastFirstName()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:56 EST" name="searchMembers_LastFirstName" description="PBI:124130" finished-at="2020-02-18T15:17:56 EST" duration-ms="758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_LastFirstName -->
        <test-method signature="searchMembers_LastName()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:56 EST" name="searchMembers_LastName" description="PBI:124130" finished-at="2020-02-18T15:17:57 EST" duration-ms="642" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_LastName -->
        <test-method signature="searchMembers_MobilePhoneDashes()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:57 EST" name="searchMembers_MobilePhoneDashes" description="PBI:124130" finished-at="2020-02-18T15:17:58 EST" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_MobilePhoneDashes -->
        <test-method signature="searchMembers_MobilePhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:58 EST" name="searchMembers_MobilePhoneNoDashes" description="PBI:124130" finished-at="2020-02-18T15:17:58 EST" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_MobilePhoneNoDashes -->
        <test-method signature="searchMembers_WorkPhoneDashes()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:58 EST" name="searchMembers_WorkPhoneDashes" description="PBI:124130" finished-at="2020-02-18T15:17:59 EST" duration-ms="807" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_WorkPhoneDashes -->
        <test-method signature="searchMembers_WorkPhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchMembers@2d52216b]" started-at="2020-02-18T15:17:59 EST" name="searchMembers_WorkPhoneNoDashes" description="PBI:124130" finished-at="2020-02-18T15:18:00 EST" duration-ms="533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchMembers_WorkPhoneNoDashes -->
      </class> <!-- JonasFitness.API.SearchMembers -->
      <class name="JonasFitness.API.GetAllAvailableCoursesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAllAvailableCoursesByMember@4310d43]" started-at="2020-02-18T15:15:00 EST" name="getData" finished-at="2020-02-18T15:15:00 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="courseDetailsReturned()[pri:0, instance:JonasFitness.API.GetAllAvailableCoursesByMember@4310d43]" started-at="2020-02-18T15:15:00 EST" name="courseDetailsReturned" description="PBI:146572" finished-at="2020-02-18T15:15:03 EST" duration-ms="2225" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseDetailsReturned -->
        <test-method signature="coursesNotFound()[pri:0, instance:JonasFitness.API.GetAllAvailableCoursesByMember@4310d43]" started-at="2020-02-18T15:15:03 EST" name="coursesNotFound" description="PBI:146572" finished-at="2020-02-18T15:15:03 EST" duration-ms="827" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- coursesNotFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.GetAllAvailableCoursesByMember@4310d43]" started-at="2020-02-18T15:15:03 EST" name="customerNotFound" description="PBI:146572" finished-at="2020-02-18T15:15:04 EST" duration-ms="358" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
      </class> <!-- JonasFitness.API.GetAllAvailableCoursesByMember -->
      <class name="JonasFitness.API.GetPackageDetails">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:05 EST" name="getData" finished-at="2020-02-18T15:17:05 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="invalidCustomerId()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:05 EST" name="invalidCustomerId" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:06 EST" duration-ms="687" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCustomerId -->
        <test-method signature="invalidPackageId()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:06 EST" name="invalidPackageId" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:06 EST" duration-ms="505" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPackageId -->
        <test-method signature="multiplePriceRanges()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:06 EST" name="multiplePriceRanges" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:08 EST" duration-ms="1848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplePriceRanges -->
        <test-method signature="notServiceTypeV()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:08 EST" name="notServiceTypeV" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:09 EST" duration-ms="470" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notServiceTypeV -->
        <test-method signature="service_Inactive()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:09 EST" name="service_Inactive" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:09 EST" duration-ms="560" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- service_Inactive -->
        <test-method signature="service_OnlineSalesAllowed()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:09 EST" name="service_OnlineSalesAllowed" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:11 EST" duration-ms="1666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- service_OnlineSalesAllowed -->
        <test-method signature="service_OnlineSalesNotAllowed()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:11 EST" name="service_OnlineSalesNotAllowed" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:11 EST" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- service_OnlineSalesNotAllowed -->
        <test-method signature="singlePriceRange()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:11 EST" name="singlePriceRange" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:13 EST" duration-ms="1744" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singlePriceRange -->
        <test-method signature="training_Inactive()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:13 EST" name="training_Inactive" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:14 EST" duration-ms="543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- training_Inactive -->
        <test-method signature="training_OnlineSalesAllowed()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:14 EST" name="training_OnlineSalesAllowed" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:14 EST" duration-ms="568" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- training_OnlineSalesAllowed -->
        <test-method signature="training_OnlineSalesNotAllowed()[pri:0, instance:JonasFitness.API.GetPackageDetails@273e7444]" started-at="2020-02-18T15:17:14 EST" name="training_OnlineSalesNotAllowed" description="PBI:143538, 148154" finished-at="2020-02-18T15:17:15 EST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- training_OnlineSalesNotAllowed -->
      </class> <!-- JonasFitness.API.GetPackageDetails -->
      <class name="JonasFitness.API.EnrollMemberInCourseWithCardOnFile">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:30 EST" name="getData" finished-at="2020-02-18T15:05:30 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="courseEnded()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:30 EST" name="courseEnded" description="PBI:146578" finished-at="2020-02-18T15:05:31 EST" duration-ms="1204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseEnded -->
        <test-method signature="courseNotAvailableOnline()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:31 EST" name="courseNotAvailableOnline" description="PBI:146578" finished-at="2020-02-18T15:05:35 EST" duration-ms="3924" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotAvailableOnline -->
        <test-method signature="courseNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:35 EST" name="courseNotFound" description="PBI:146578" finished-at="2020-02-18T15:05:36 EST" duration-ms="477" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:36 EST" name="customerNotFound" description="PBI:146578" finished-at="2020-02-18T15:05:36 EST" duration-ms="373" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="memberAlreadyEnrolled()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:36 EST" name="memberAlreadyEnrolled" description="PBI:146578" finished-at="2020-02-18T15:05:37 EST" duration-ms="792" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyEnrolled -->
        <test-method signature="memberAlreadyOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:37 EST" name="memberAlreadyOnStandby" description="PBI:146578" finished-at="2020-02-18T15:05:38 EST" duration-ms="805" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyOnStandby -->
        <test-method signature="memberEnrolledFreeCourseCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:38 EST" name="memberEnrolledFreeCourseCollectionsMember" description="PBI:146578" finished-at="2020-02-18T15:05:54 EST" duration-ms="16424" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourseCollectionsMember -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:05:54 EST" name="memberEnrolledOnStandby" description="PBI:146578" finished-at="2020-02-18T15:06:10 EST" duration-ms="16303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolled_FreeCourse()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:06:10 EST" name="memberEnrolled_FreeCourse" description="PBI:146578" finished-at="2020-02-18T15:06:27 EST" duration-ms="16664" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolled_FreeCourse -->
        <test-method signature="memberEnrolled_PaidCourse()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:06:27 EST" name="memberEnrolled_PaidCourse" description="PBI:146578" finished-at="2020-02-18T15:06:44 EST" duration-ms="17309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolled_PaidCourse -->
        <test-method signature="memberNotEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:06:44 EST" name="memberNotEnrolledOnStandby" description="PBI:146578" finished-at="2020-02-18T15:06:45 EST" duration-ms="1166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberNotEnrolledOnStandby -->
        <test-method signature="noFOP_AccountProblem()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:06:45 EST" name="noFOP_AccountProblem" description="PBI:146578" finished-at="2020-02-18T15:06:47 EST" duration-ms="1128" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- noFOP_AccountProblem -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:06:47 EST" name="productPriceChanged" description="PBI:146578" finished-at="2020-02-18T15:06:48 EST" duration-ms="1090" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
        <test-method signature="schedulingConflict()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithCardOnFile@6253c26]" started-at="2020-02-18T15:06:48 EST" name="schedulingConflict" description="PBI:146578" finished-at="2020-02-18T15:06:49 EST" duration-ms="915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- schedulingConflict -->
      </class> <!-- JonasFitness.API.EnrollMemberInCourseWithCardOnFile -->
      <class name="JonasFitness.API.GetPurchasedPackagesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetPurchasedPackagesByMember@272113c4]" started-at="2020-02-18T15:17:31 EST" name="getData" finished-at="2020-02-18T15:17:31 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="PackagesFound()[pri:0, instance:JonasFitness.API.GetPurchasedPackagesByMember@272113c4]" started-at="2020-02-18T15:17:31 EST" name="PackagesFound" description="PBI:124125" finished-at="2020-02-18T15:17:32 EST" duration-ms="848" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PackagesFound -->
        <test-method signature="PackagesNotFound()[pri:0, instance:JonasFitness.API.GetPurchasedPackagesByMember@272113c4]" started-at="2020-02-18T15:17:32 EST" name="PackagesNotFound" description="PBI:124125" finished-at="2020-02-18T15:17:33 EST" duration-ms="521" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PackagesNotFound -->
      </class> <!-- JonasFitness.API.GetPurchasedPackagesByMember -->
      <class name="JonasFitness.API.GetAllAvailableClassesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAllAvailableClassesByMember@61001b64]" started-at="2020-02-18T15:14:54 EST" name="getData" finished-at="2020-02-18T15:14:54 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="classFound()[pri:0, instance:JonasFitness.API.GetAllAvailableClassesByMember@61001b64]" started-at="2020-02-18T15:14:54 EST" name="classFound" description="PBI:146571" finished-at="2020-02-18T15:14:59 EST" duration-ms="5311" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected response time was not a value less than <5L> seconds, was 5298 milliseconds (5 seconds).]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected response time was not a value less than <5L> seconds, was 5298 milliseconds (5 seconds).
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
at io.restassured.internal.ResponseSpecificationImpl.time(ResponseSpecificationImpl.groovy:118)
at io.restassured.internal.ValidatableResponseOptionsImpl.time(ValidatableResponseOptionsImpl.java:409)
at io.restassured.internal.ValidatableResponseImpl.super$2$time(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor176.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.time(ValidatableResponseImpl.groovy:58)
at io.restassured.internal.ValidatableResponseImpl.time(ValidatableResponseImpl.groovy)
at JonasFitness.API.GetAllAvailableClassesByMember.classFound(GetAllAvailableClassesByMember.java:44)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classFound -->
        <test-method signature="classNotFound()[pri:0, instance:JonasFitness.API.GetAllAvailableClassesByMember@61001b64]" started-at="2020-02-18T15:14:59 EST" name="classNotFound" description="PBI:146571" finished-at="2020-02-18T15:15:00 EST" duration-ms="912" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.GetAllAvailableClassesByMember@61001b64]" started-at="2020-02-18T15:15:00 EST" name="customerNotFound" description="PBI:146571" finished-at="2020-02-18T15:15:00 EST" duration-ms="387" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
      </class> <!-- JonasFitness.API.GetAllAvailableClassesByMember -->
      <class name="JonasFitness.API.EnrollMemberInCourseWithRecurringDues">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:13:41 EST" name="getData" finished-at="2020-02-18T15:13:41 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="courseEnded()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:13:41 EST" name="courseEnded" description="PBI:154260" finished-at="2020-02-18T15:13:42 EST" duration-ms="903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseEnded -->
        <test-method signature="courseNotAvailableOnline()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:13:42 EST" name="courseNotAvailableOnline" description="PBI:154260" finished-at="2020-02-18T15:13:43 EST" duration-ms="968" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotAvailableOnline -->
        <test-method signature="courseNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:13:43 EST" name="courseNotFound" description="PBI:154260" finished-at="2020-02-18T15:13:43 EST" duration-ms="468" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:13:43 EST" name="customerNotFound" description="PBI:154260" finished-at="2020-02-18T15:13:44 EST" duration-ms="416" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="memberAlreadyEnrolled()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:13:44 EST" name="memberAlreadyEnrolled" description="PBI:154260" finished-at="2020-02-18T15:13:44 EST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyEnrolled -->
        <test-method signature="memberAlreadyEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:13:44 EST" name="memberAlreadyEnrolledOnStandby" description="PBI:154260" finished-at="2020-02-18T15:13:45 EST" duration-ms="730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyEnrolledOnStandby -->
        <test-method signature="memberEnrolledFreeCourse()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:13:45 EST" name="memberEnrolledFreeCourse" description="PBI:154260" finished-at="2020-02-18T15:14:01 EST" duration-ms="16229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourse -->
        <test-method signature="memberEnrolledFreeCourseCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:14:01 EST" name="memberEnrolledFreeCourseCollectionsMember" description="PBI:154260" finished-at="2020-02-18T15:14:17 EST" duration-ms="16085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeCourseCollectionsMember -->
        <test-method signature="memberEnrolledNotOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:14:17 EST" name="memberEnrolledNotOnStandby" description="PBI:154260" finished-at="2020-02-18T15:14:18 EST" duration-ms="1127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledNotOnStandby -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:14:18 EST" name="memberEnrolledOnStandby" description="PBI:154260" finished-at="2020-02-18T15:14:35 EST" duration-ms="16355" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolledPaidCourse()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:14:35 EST" name="memberEnrolledPaidCourse" description="PBI:154260" finished-at="2020-02-18T15:14:51 EST" duration-ms="16018" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidCourse -->
        <test-method signature="recurringDuesNotAccepted()[pri:0, instance:JonasFitness.API.EnrollMemberInCourseWithRecurringDues@51e69659]" started-at="2020-02-18T15:14:51 EST" name="recurringDuesNotAccepted" description="PBI:154260" finished-at="2020-02-18T15:14:52 EST" duration-ms="858" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recurringDuesNotAccepted -->
      </class> <!-- JonasFitness.API.EnrollMemberInCourseWithRecurringDues -->
      <class name="JonasFitness.API.GetOnlinePackagesForPurchaseByClub">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetOnlinePackagesForPurchaseByClub@52b1beb6]" started-at="2020-02-18T15:17:02 EST" name="getData" finished-at="2020-02-18T15:17:02 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="PackageNotAllowed()[pri:0, instance:JonasFitness.API.GetOnlinePackagesForPurchaseByClub@52b1beb6]" started-at="2020-02-18T15:17:02 EST" name="PackageNotAllowed" description="PBI:143537" finished-at="2020-02-18T15:17:03 EST" duration-ms="1161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PackageNotAllowed -->
        <test-method signature="PackagesFound()[pri:0, instance:JonasFitness.API.GetOnlinePackagesForPurchaseByClub@52b1beb6]" started-at="2020-02-18T15:17:03 EST" name="PackagesFound" description="PBI:143537" finished-at="2020-02-18T15:17:05 EST" duration-ms="1368" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PackagesFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.GetOnlinePackagesForPurchaseByClub@52b1beb6]" started-at="2020-02-18T15:17:05 EST" name="customerNotFound" description="PBI:143537" finished-at="2020-02-18T15:17:05 EST" duration-ms="374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
      </class> <!-- JonasFitness.API.GetOnlinePackagesForPurchaseByClub -->
      <class name="JonasFitness.API.GetBookAvailabilityCalendar">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetBookAvailabilityCalendar@55634720]" started-at="2020-02-18T15:15:32 EST" name="getData" finished-at="2020-02-18T15:15:32 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="bookAvailabilityCalendarFound()[pri:0, instance:JonasFitness.API.GetBookAvailabilityCalendar@55634720]" started-at="2020-02-18T15:15:32 EST" name="bookAvailabilityCalendarFound" description="PBI:140727" finished-at="2020-02-18T15:15:33 EST" duration-ms="730" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bookAvailabilityCalendarFound -->
      </class> <!-- JonasFitness.API.GetBookAvailabilityCalendar -->
      <class name="JonasFitness.API.VerifyCourseEnrollmentCapability">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:27 EST" name="getData" finished-at="2020-02-18T15:18:27 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="courseEnded()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:27 EST" name="courseEnded" description="PBI:150004" finished-at="2020-02-18T15:18:28 EST" duration-ms="834" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseEnded -->
        <test-method signature="courseEnrollmentClosed()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:28 EST" name="courseEnrollmentClosed" description="PBI:150004" finished-at="2020-02-18T15:18:28 EST" duration-ms="724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseEnrollmentClosed -->
        <test-method signature="courseFullStandbyAllowed()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:28 EST" name="courseFullStandbyAllowed" description="PBI:150004" finished-at="2020-02-18T15:18:29 EST" duration-ms="869" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseFullStandbyAllowed -->
        <test-method signature="customerAlreadyEnrolled()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:29 EST" name="customerAlreadyEnrolled" description="PBI:150004" finished-at="2020-02-18T15:18:30 EST" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerAlreadyEnrolled -->
        <test-method signature="customerAlreadyOnStandby()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:30 EST" name="customerAlreadyOnStandby" description="PBI:150004" finished-at="2020-02-18T15:18:30 EST" duration-ms="625" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerAlreadyOnStandby -->
        <test-method signature="enrollmentCapabilityVerified()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:30 EST" name="enrollmentCapabilityVerified" description="PBI:150004" finished-at="2020-02-18T15:18:31 EST" duration-ms="789" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentCapabilityVerified -->
        <test-method signature="enrollmentNotAllowedFrozenMember()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:31 EST" name="enrollmentNotAllowedFrozenMember" description="PBI:150004" finished-at="2020-02-18T15:18:32 EST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedFrozenMember -->
        <test-method signature="enrollmentNotAllowedItem()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:32 EST" name="enrollmentNotAllowedItem" description="PBI:150004" finished-at="2020-02-18T15:18:33 EST" duration-ms="722" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedItem -->
        <test-method signature="enrollmentNotAllowedTerminatedMember()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:33 EST" name="enrollmentNotAllowedTerminatedMember" description="PBI:150004" finished-at="2020-02-18T15:18:33 EST" duration-ms="711" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- enrollmentNotAllowedTerminatedMember -->
        <test-method signature="invalidCourseBarcodeId()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:33 EST" name="invalidCourseBarcodeId" description="PBI:150004" finished-at="2020-02-18T15:18:34 EST" duration-ms="345" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCourseBarcodeId -->
        <test-method signature="invalidCustomerId()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:34 EST" name="invalidCustomerId" description="PBI:150004" finished-at="2020-02-18T15:18:34 EST" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCustomerId -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.VerifyCourseEnrollmentCapability@1ed6388a]" started-at="2020-02-18T15:18:34 EST" name="productPriceChanged" description="PBI:150004" finished-at="2020-02-18T15:18:35 EST" duration-ms="857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
      </class> <!-- JonasFitness.API.VerifyCourseEnrollmentCapability -->
      <class name="JonasFitness.API.GetCourseDetails">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetCourseDetails@59505b48]" started-at="2020-02-18T15:16:08 EST" name="getData" finished-at="2020-02-18T15:16:08 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="courseFound()[pri:0, instance:JonasFitness.API.GetCourseDetails@59505b48]" started-at="2020-02-18T15:16:08 EST" name="courseFound" description="PBI:143545" finished-at="2020-02-18T15:16:11 EST" duration-ms="3445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseFound -->
        <test-method signature="courseNotFound_ClassBarcodeIDUsed()[pri:0, instance:JonasFitness.API.GetCourseDetails@59505b48]" started-at="2020-02-18T15:16:11 EST" name="courseNotFound_ClassBarcodeIDUsed" description="PBI:143545" finished-at="2020-02-18T15:16:12 EST" duration-ms="750" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotFound_ClassBarcodeIDUsed -->
        <test-method signature="courseNotFound_InvalidCourseBarcodeID()[pri:0, instance:JonasFitness.API.GetCourseDetails@59505b48]" started-at="2020-02-18T15:16:12 EST" name="courseNotFound_InvalidCourseBarcodeID" description="PBI:143545" finished-at="2020-02-18T15:16:12 EST" duration-ms="771" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotFound_InvalidCourseBarcodeID -->
        <test-method signature="courseNotFound_TrainingBarcodeIDUsed()[pri:0, instance:JonasFitness.API.GetCourseDetails@59505b48]" started-at="2020-02-18T15:16:12 EST" name="courseNotFound_TrainingBarcodeIDUsed" description="PBI:143545" finished-at="2020-02-18T15:16:13 EST" duration-ms="927" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- courseNotFound_TrainingBarcodeIDUsed -->
        <test-method signature="invalidCustomerId()[pri:0, instance:JonasFitness.API.GetCourseDetails@59505b48]" started-at="2020-02-18T15:16:13 EST" name="invalidCustomerId" description="PBI:143545" finished-at="2020-02-18T15:16:14 EST" duration-ms="658" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCustomerId -->
      </class> <!-- JonasFitness.API.GetCourseDetails -->
      <class name="JonasFitness.API.GetActiveBooksByResourceType">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetActiveBooksByResourceType@47e2e487]" started-at="2020-02-18T15:14:52 EST" name="getData" finished-at="2020-02-18T15:14:52 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="BookFound_NoResource()[pri:0, instance:JonasFitness.API.GetActiveBooksByResourceType@47e2e487]" started-at="2020-02-18T15:14:52 EST" name="BookFound_NoResource" description="PBI:138964" finished-at="2020-02-18T15:14:52 EST" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BookFound_NoResource -->
        <test-method signature="BookFound_WithResource()[pri:0, instance:JonasFitness.API.GetActiveBooksByResourceType@47e2e487]" started-at="2020-02-18T15:14:52 EST" name="BookFound_WithResource" description="PBI:138964" finished-at="2020-02-18T15:14:53 EST" duration-ms="432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BookFound_WithResource -->
        <test-method signature="resourceNotFound()[pri:0, instance:JonasFitness.API.GetActiveBooksByResourceType@47e2e487]" started-at="2020-02-18T15:14:53 EST" name="resourceNotFound" description="PBI:138964" finished-at="2020-02-18T15:14:53 EST" duration-ms="365" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- resourceNotFound -->
      </class> <!-- JonasFitness.API.GetActiveBooksByResourceType -->
      <class name="JonasFitness.API.GetFieldsForProspectCreationByEmployee">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetFieldsForProspectCreationByEmployee@b9b00e0]" started-at="2020-02-18T15:16:39 EST" name="getData" finished-at="2020-02-18T15:16:39 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="fieldsFound()[pri:0, instance:JonasFitness.API.GetFieldsForProspectCreationByEmployee@b9b00e0]" started-at="2020-02-18T15:16:39 EST" name="fieldsFound" description="PBI:147788" finished-at="2020-02-18T15:16:42 EST" duration-ms="2879" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fieldsFound -->
        <test-method signature="fieldsFound2()[pri:0, instance:JonasFitness.API.GetFieldsForProspectCreationByEmployee@b9b00e0]" started-at="2020-02-18T15:16:42 EST" name="fieldsFound2" description="PBI:147788" finished-at="2020-02-18T15:16:45 EST" duration-ms="2911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fieldsFound2 -->
      </class> <!-- JonasFitness.API.GetFieldsForProspectCreationByEmployee -->
      <class name="JonasFitness.API.GetCardsOnFileByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@4b0d79fc]" started-at="2020-02-18T15:15:33 EST" name="getData" finished-at="2020-02-18T15:15:33 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="CardWithoutAgreement()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@4b0d79fc]" started-at="2020-02-18T15:15:33 EST" name="CardWithoutAgreement" description="PBI:146302" finished-at="2020-02-18T15:15:34 EST" duration-ms="889" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CardWithoutAgreement -->
        <test-method signature="MultipleAgreementsWithMultipleCards()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@4b0d79fc]" started-at="2020-02-18T15:15:34 EST" name="MultipleAgreementsWithMultipleCards" description="PBI:146302" finished-at="2020-02-18T15:15:35 EST" duration-ms="979" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleAgreementsWithMultipleCards -->
        <test-method signature="MultipleAgreementsWithSingleCard()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@4b0d79fc]" started-at="2020-02-18T15:15:35 EST" name="MultipleAgreementsWithSingleCard" description="PBI:146302" finished-at="2020-02-18T15:15:35 EST" duration-ms="564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleAgreementsWithSingleCard -->
        <test-method signature="NoCardOnFile()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@4b0d79fc]" started-at="2020-02-18T15:15:35 EST" name="NoCardOnFile" description="PBI:146302" finished-at="2020-02-18T15:15:36 EST" duration-ms="753" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoCardOnFile -->
        <test-method signature="SingleAgreementMultipleCardsOnFile()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@4b0d79fc]" started-at="2020-02-18T15:15:36 EST" name="SingleAgreementMultipleCardsOnFile" description="PBI:146302" finished-at="2020-02-18T15:15:37 EST" duration-ms="739" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleAgreementMultipleCardsOnFile -->
        <test-method signature="SingleAgreementWithCard()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@4b0d79fc]" started-at="2020-02-18T15:15:37 EST" name="SingleAgreementWithCard" description="PBI:146302" finished-at="2020-02-18T15:15:37 EST" duration-ms="593" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleAgreementWithCard -->
      </class> <!-- JonasFitness.API.GetCardsOnFileByMember -->
      <class name="JonasFitness.API.GetScheduleByMember">
        <test-method signature="appointmentFound()[pri:0, instance:JonasFitness.API.GetScheduleByMember@771a660]" started-at="2020-02-18T15:17:51 EST" name="appointmentFound" description="PBI:124954" finished-at="2020-02-18T15:17:52 EST" duration-ms="934" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appointmentFound -->
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetScheduleByMember@771a660]" started-at="2020-02-18T15:17:51 EST" name="getData" finished-at="2020-02-18T15:17:51 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="classFound()[pri:0, instance:JonasFitness.API.GetScheduleByMember@771a660]" started-at="2020-02-18T15:17:52 EST" name="classFound" description="PBI:124954" finished-at="2020-02-18T15:17:53 EST" duration-ms="809" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classFound -->
        <test-method signature="classNotFound()[pri:0, instance:JonasFitness.API.GetScheduleByMember@771a660]" started-at="2020-02-18T15:17:53 EST" name="classNotFound" description="PBI:124954" finished-at="2020-02-18T15:17:53 EST" duration-ms="504" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound -->
      </class> <!-- JonasFitness.API.GetScheduleByMember -->
      <class name="JonasFitness.API.GetClassesAndCoursesByBook">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByBook@428640fa]" started-at="2020-02-18T15:15:47 EST" name="getData" finished-at="2020-02-18T15:15:47 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ClassesCoursesFound()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByBook@428640fa]" started-at="2020-02-18T15:15:47 EST" name="ClassesCoursesFound" description="PBI:140729" finished-at="2020-02-18T15:15:52 EST" duration-ms="5355" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected response time was not a value less than <5L> seconds, was 5353 milliseconds (5 seconds).]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected response time was not a value less than <5L> seconds, was 5353 milliseconds (5 seconds).
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at jdk.internal.reflect.GeneratedMethodAccessor42.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
at io.restassured.internal.ResponseSpecificationImpl.time(ResponseSpecificationImpl.groovy:118)
at io.restassured.internal.ValidatableResponseOptionsImpl.time(ValidatableResponseOptionsImpl.java:409)
at io.restassured.internal.ValidatableResponseImpl.super$2$time(ValidatableResponseImpl.groovy)
at jdk.internal.reflect.GeneratedMethodAccessor176.invoke(Unknown Source)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.time(ValidatableResponseImpl.groovy:58)
at io.restassured.internal.ValidatableResponseImpl.time(ValidatableResponseImpl.groovy)
at JonasFitness.API.GetClassesAndCoursesByBook.ClassesCoursesFound(GetClassesAndCoursesByBook.java:41)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassesCoursesFound -->
        <test-method signature="ClassesCoursesNotFound()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByBook@428640fa]" started-at="2020-02-18T15:15:52 EST" name="ClassesCoursesNotFound" description="PBI:140729" finished-at="2020-02-18T15:15:53 EST" duration-ms="466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassesCoursesNotFound -->
        <test-method signature="ClassesCoursesNotFound2()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByBook@428640fa]" started-at="2020-02-18T15:15:53 EST" name="ClassesCoursesNotFound2" description="PBI:140729" finished-at="2020-02-18T15:15:53 EST" duration-ms="374" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClassesCoursesNotFound2 -->
        <test-method signature="invalidClassCourse()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByBook@428640fa]" started-at="2020-02-18T15:15:53 EST" name="invalidClassCourse" description="PBI:140729" finished-at="2020-02-18T15:15:54 EST" duration-ms="440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidClassCourse -->
        <test-method signature="invalidDateRange()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByBook@428640fa]" started-at="2020-02-18T15:15:54 EST" name="invalidDateRange" description="PBI:140729" finished-at="2020-02-18T15:15:54 EST" duration-ms="384" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidDateRange -->
      </class> <!-- JonasFitness.API.GetClassesAndCoursesByBook -->
      <class name="JonasFitness.API.GetFieldsForMemberCreationByEmployee">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetFieldsForMemberCreationByEmployee@48aca48b]" started-at="2020-02-18T15:16:29 EST" name="getData" finished-at="2020-02-18T15:16:29 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="fieldsFound()[pri:0, instance:JonasFitness.API.GetFieldsForMemberCreationByEmployee@48aca48b]" started-at="2020-02-18T15:16:29 EST" name="fieldsFound" description="PBI:147787" finished-at="2020-02-18T15:16:33 EST" duration-ms="3101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fieldsFound -->
        <test-method signature="fieldsFound2()[pri:0, instance:JonasFitness.API.GetFieldsForMemberCreationByEmployee@48aca48b]" started-at="2020-02-18T15:16:33 EST" name="fieldsFound2" description="PBI:147787" finished-at="2020-02-18T15:16:36 EST" duration-ms="3295" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- fieldsFound2 -->
      </class> <!-- JonasFitness.API.GetFieldsForMemberCreationByEmployee -->
      <class name="JonasFitness.API.GetOnlineAvailableClassesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetOnlineAvailableClassesByMember@54e1c68b]" started-at="2020-02-18T15:16:52 EST" name="getData" finished-at="2020-02-18T15:16:52 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="classNotFound()[pri:0, instance:JonasFitness.API.GetOnlineAvailableClassesByMember@54e1c68b]" started-at="2020-02-18T15:16:52 EST" name="classNotFound" description="PBI:144256" finished-at="2020-02-18T15:16:53 EST" duration-ms="1036" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound -->
        <test-method signature="classesFound()[pri:0, instance:JonasFitness.API.GetOnlineAvailableClassesByMember@54e1c68b]" started-at="2020-02-18T15:16:53 EST" name="classesFound" description="PBI:144256" finished-at="2020-02-18T15:16:58 EST" duration-ms="4808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classesFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.GetOnlineAvailableClassesByMember@54e1c68b]" started-at="2020-02-18T15:16:58 EST" name="customerNotFound" description="PBI:144256" finished-at="2020-02-18T15:16:59 EST" duration-ms="847" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
      </class> <!-- JonasFitness.API.GetOnlineAvailableClassesByMember -->
      <class name="JonasFitness.API.GetClassDetails">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetClassDetails@29215f06]" started-at="2020-02-18T15:16:01 EST" name="getData" finished-at="2020-02-18T15:16:01 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="classFoundOnlineSaleAllowed()[pri:0, instance:JonasFitness.API.GetClassDetails@29215f06]" started-at="2020-02-18T15:16:01 EST" name="classFoundOnlineSaleAllowed" description="PBI:143544" finished-at="2020-02-18T15:16:03 EST" duration-ms="2736" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classFoundOnlineSaleAllowed -->
        <test-method signature="classFoundOnlineSaleNotAllowed()[pri:0, instance:JonasFitness.API.GetClassDetails@29215f06]" started-at="2020-02-18T15:16:03 EST" name="classFoundOnlineSaleNotAllowed" description="PBI:143544" finished-at="2020-02-18T15:16:04 EST" duration-ms="740" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classFoundOnlineSaleNotAllowed -->
        <test-method signature="classNotFound_CourseBarcodeIDUsed()[pri:0, instance:JonasFitness.API.GetClassDetails@29215f06]" started-at="2020-02-18T15:16:04 EST" name="classNotFound_CourseBarcodeIDUsed" description="PBI:143544" finished-at="2020-02-18T15:16:05 EST" duration-ms="662" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound_CourseBarcodeIDUsed -->
        <test-method signature="classNotFound_InvalidClassBarcodeID()[pri:0, instance:JonasFitness.API.GetClassDetails@29215f06]" started-at="2020-02-18T15:16:05 EST" name="classNotFound_InvalidClassBarcodeID" description="PBI:143544" finished-at="2020-02-18T15:16:06 EST" duration-ms="936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound_InvalidClassBarcodeID -->
        <test-method signature="classNotFound_TrainingBarcodeIDUsed()[pri:0, instance:JonasFitness.API.GetClassDetails@29215f06]" started-at="2020-02-18T15:16:06 EST" name="classNotFound_TrainingBarcodeIDUsed" description="PBI:143544" finished-at="2020-02-18T15:16:06 EST" duration-ms="785" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound_TrainingBarcodeIDUsed -->
        <test-method signature="invalidCustomerId()[pri:0, instance:JonasFitness.API.GetClassDetails@29215f06]" started-at="2020-02-18T15:16:06 EST" name="invalidCustomerId" description="PBI:143544" finished-at="2020-02-18T15:16:08 EST" duration-ms="1154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidCustomerId -->
      </class> <!-- JonasFitness.API.GetClassDetails -->
      <class name="JonasFitness.API.EnrollMemberInClassWithRecurringDues">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:25 EST" name="getData" finished-at="2020-02-18T15:12:25 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="classEnded()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:25 EST" name="classEnded" description="PBI:154259" finished-at="2020-02-18T15:12:26 EST" duration-ms="1194" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classEnded -->
        <test-method signature="classNotAvailableOnline()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:26 EST" name="classNotAvailableOnline" description="PBI:154259" finished-at="2020-02-18T15:12:30 EST" duration-ms="3929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotAvailableOnline -->
        <test-method signature="classNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:30 EST" name="classNotFound" description="PBI:154259" finished-at="2020-02-18T15:12:31 EST" duration-ms="1214" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound -->
        <test-method signature="customerNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:31 EST" name="customerNotFound" description="PBI:154259" finished-at="2020-02-18T15:12:32 EST" duration-ms="349" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- customerNotFound -->
        <test-method signature="memberAlreadyEnrolled()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:32 EST" name="memberAlreadyEnrolled" description="PBI:154259" finished-at="2020-02-18T15:12:32 EST" duration-ms="886" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyEnrolled -->
        <test-method signature="memberAlreadyOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:32 EST" name="memberAlreadyOnStandby" description="PBI:154259" finished-at="2020-02-18T15:12:33 EST" duration-ms="988" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberAlreadyOnStandby -->
        <test-method signature="memberEnrolledFreeClass()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:33 EST" name="memberEnrolledFreeClass" description="PBI:154259" finished-at="2020-02-18T15:12:50 EST" duration-ms="16246" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeClass -->
        <test-method signature="memberEnrolledFreeClassCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:12:50 EST" name="memberEnrolledFreeClassCollectionsMember" description="PBI:154259" finished-at="2020-02-18T15:13:06 EST" duration-ms="16114" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeClassCollectionsMember -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:13:06 EST" name="memberEnrolledOnStandby" description="PBI:154259" finished-at="2020-02-18T15:13:22 EST" duration-ms="16084" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolledPaidClass()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:13:22 EST" name="memberEnrolledPaidClass" description="PBI:154259" finished-at="2020-02-18T15:13:38 EST" duration-ms="16325" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidClass -->
        <test-method signature="memberNotEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:13:38 EST" name="memberNotEnrolledOnStandby" description="PBI:154259" finished-at="2020-02-18T15:13:39 EST" duration-ms="1014" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberNotEnrolledOnStandby -->
        <test-method signature="occurrenceNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:13:39 EST" name="occurrenceNotFound" description="PBI:154259" finished-at="2020-02-18T15:13:40 EST" duration-ms="627" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- occurrenceNotFound -->
        <test-method signature="recurringDuesNotAccepted()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithRecurringDues@659499f1]" started-at="2020-02-18T15:13:40 EST" name="recurringDuesNotAccepted" description="PBI:154259" finished-at="2020-02-18T15:13:41 EST" duration-ms="936" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- recurringDuesNotAccepted -->
      </class> <!-- JonasFitness.API.EnrollMemberInClassWithRecurringDues -->
      <class name="JonasFitness.API.BookAppointmentByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:35 EST" name="getData" finished-at="2020-02-18T15:00:35 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="FreeAppointment_SingleMember()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:35 EST" name="FreeAppointment_SingleMember" description="PBI:127168" finished-at="2020-02-18T15:00:39 EST" duration-ms="3483" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FreeAppointment_SingleMember -->
        <test-method signature="PaidAppointment_MultipleMember()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:39 EST" name="PaidAppointment_MultipleMember" description="PBI:127168" finished-at="2020-02-18T15:00:41 EST" duration-ms="2440" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaidAppointment_MultipleMember -->
        <test-method signature="PaidAppointment_SingleMember()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:41 EST" name="PaidAppointment_SingleMember" description="PBI:127168" finished-at="2020-02-18T15:00:44 EST" duration-ms="2389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PaidAppointment_SingleMember -->
        <test-method signature="appointmentNotFound()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:44 EST" name="appointmentNotFound" description="PBI:127168" finished-at="2020-02-18T15:00:44 EST" duration-ms="738" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- appointmentNotFound -->
        <test-method signature="notEnoughPunches()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:44 EST" name="notEnoughPunches" description="PBI:127168" finished-at="2020-02-18T15:00:45 EST" duration-ms="713" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notEnoughPunches -->
        <test-method signature="notValidBookableItem()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:45 EST" name="notValidBookableItem" description="PBI:127168" finished-at="2020-02-18T15:00:46 EST" duration-ms="641" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notValidBookableItem -->
        <test-method signature="productPriceChanged()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:46 EST" name="productPriceChanged" description="PBI:127168" finished-at="2020-02-18T15:00:47 EST" duration-ms="1130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- productPriceChanged -->
        <test-method signature="punchcardAppointment_SingleMember()[pri:0, instance:JonasFitness.API.BookAppointmentByMember@437da279]" started-at="2020-02-18T15:00:47 EST" name="punchcardAppointment_SingleMember" description="PBI:127168" finished-at="2020-02-18T15:00:49 EST" duration-ms="2683" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- punchcardAppointment_SingleMember -->
      </class> <!-- JonasFitness.API.BookAppointmentByMember -->
      <class name="JonasFitness.API.EnrollMemberInClassWithPunchcard">
        <test-method signature="classNotFound()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:09:20 EST" name="classNotFound" description="PBI:147808" finished-at="2020-02-18T15:09:21 EST" duration-ms="806" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classNotFound -->
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:09:20 EST" name="getData" finished-at="2020-02-18T15:09:20 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="memberEnrolledFreeClass()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:09:21 EST" name="memberEnrolledFreeClass" description="PBI:147808" finished-at="2020-02-18T15:09:37 EST" duration-ms="16133" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeClass -->
        <test-method signature="memberEnrolledFreeClassCollectionsMember()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:09:37 EST" name="memberEnrolledFreeClassCollectionsMember" description="PBI:147808" finished-at="2020-02-18T15:09:53 EST" duration-ms="16171" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledFreeClassCollectionsMember -->
        <test-method signature="memberEnrolledOnStandby()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:09:53 EST" name="memberEnrolledOnStandby" description="PBI:147808" finished-at="2020-02-18T15:10:09 EST" duration-ms="16120" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledOnStandby -->
        <test-method signature="memberEnrolledPaidClassNotStarted()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:10:09 EST" name="memberEnrolledPaidClassNotStarted" description="PBI:147808" finished-at="2020-02-18T15:10:26 EST" duration-ms="16140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidClassNotStarted -->
        <test-method signature="memberEnrolledPaidClassStarted()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:10:26 EST" name="memberEnrolledPaidClassStarted" description="PBI:147808" finished-at="2020-02-18T15:10:42 EST" duration-ms="16264" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberEnrolledPaidClassStarted -->
        <test-method signature="notEnoughPunches()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:10:42 EST" name="notEnoughPunches" description="PBI:147808" finished-at="2020-02-18T15:10:43 EST" duration-ms="954" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- notEnoughPunches -->
        <test-method signature="punchcardNotAllowed()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:10:43 EST" name="punchcardNotAllowed" description="PBI:147808" finished-at="2020-02-18T15:10:44 EST" duration-ms="902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- punchcardNotAllowed -->
        <test-method signature="standbyNotAllowed()[pri:0, instance:JonasFitness.API.EnrollMemberInClassWithPunchcard@27462a88]" started-at="2020-02-18T15:10:44 EST" name="standbyNotAllowed" description="PBI:147808" finished-at="2020-02-18T15:10:45 EST" duration-ms="960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- standbyNotAllowed -->
      </class> <!-- JonasFitness.API.EnrollMemberInClassWithPunchcard -->
      <class name="JonasFitness.API.SecurityPipeline">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.SecurityPipeline@3527942a]" started-at="2020-02-18T15:18:15 EST" name="getData" finished-at="2020-02-18T15:18:15 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="InvalidAPIKey()[pri:0, instance:JonasFitness.API.SecurityPipeline@3527942a]" started-at="2020-02-18T15:18:15 EST" name="InvalidAPIKey" description="PBI:145817" finished-at="2020-02-18T15:18:15 EST" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidAPIKey -->
        <test-method signature="InvalidClub()[pri:0, instance:JonasFitness.API.SecurityPipeline@3527942a]" started-at="2020-02-18T15:18:15 EST" name="InvalidClub" description="PBI:132893" finished-at="2020-02-18T15:18:16 EST" duration-ms="324" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidClub -->
        <test-method signature="InvalidCompany()[pri:0, instance:JonasFitness.API.SecurityPipeline@3527942a]" started-at="2020-02-18T15:18:16 EST" name="InvalidCompany" description="PBI:132893" finished-at="2020-02-18T15:18:16 EST" duration-ms="239" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidCompany -->
        <test-method signature="NoAPIKey()[pri:0, instance:JonasFitness.API.SecurityPipeline@3527942a]" started-at="2020-02-18T15:18:16 EST" name="NoAPIKey" description="PBI:145817" finished-at="2020-02-18T15:18:16 EST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoAPIKey -->
        <test-method signature="endpointNotFound()[pri:0, instance:JonasFitness.API.SecurityPipeline@3527942a]" started-at="2020-02-18T15:18:16 EST" name="endpointNotFound" description="PBI:145817" finished-at="2020-02-18T15:18:16 EST" duration-ms="210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endpointNotFound -->
      </class> <!-- JonasFitness.API.SecurityPipeline -->
      <class name="JonasFitness.API.CancelAppointmentByEmployee">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.CancelAppointmentByEmployee@23c30a20]" started-at="2020-02-18T15:00:49 EST" name="getData" finished-at="2020-02-18T15:00:49 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ApptNotFound()[pri:0, instance:JonasFitness.API.CancelAppointmentByEmployee@23c30a20]" started-at="2020-02-18T15:00:49 EST" name="ApptNotFound" description="PBI:141862" finished-at="2020-02-18T15:00:50 EST" duration-ms="606" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApptNotFound -->
        <test-method signature="NotCancelled_ApptDatePast()[pri:0, instance:JonasFitness.API.CancelAppointmentByEmployee@23c30a20]" started-at="2020-02-18T15:00:50 EST" name="NotCancelled_ApptDatePast" description="PBI:141862" finished-at="2020-02-18T15:00:51 EST" duration-ms="509" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NotCancelled_ApptDatePast -->
      </class> <!-- JonasFitness.API.CancelAppointmentByEmployee -->
      <class name="JonasFitness.API.GetAppointmentProductCategoriesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentProductCategoriesByMember@4b8ee4de]" started-at="2020-02-18T15:15:12 EST" name="getData" finished-at="2020-02-18T15:15:12 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="MemberNotFound()[pri:0, instance:JonasFitness.API.GetAppointmentProductCategoriesByMember@4b8ee4de]" started-at="2020-02-18T15:15:12 EST" name="MemberNotFound" description="PBI:127467" finished-at="2020-02-18T15:15:13 EST" duration-ms="693" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MemberNotFound -->
        <test-method signature="ProductCategoryFound()[pri:0, instance:JonasFitness.API.GetAppointmentProductCategoriesByMember@4b8ee4de]" started-at="2020-02-18T15:15:13 EST" name="ProductCategoryFound" description="PBI:127467" finished-at="2020-02-18T15:15:14 EST" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductCategoryFound -->
      </class> <!-- JonasFitness.API.GetAppointmentProductCategoriesByMember -->
      <class name="JonasFitness.API.AuthenticateMemberByUserCredentials">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.AuthenticateMemberByUserCredentials@36916eb0]" started-at="2020-02-18T15:00:06 EST" name="getData" finished-at="2020-02-18T15:00:07 EST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="wrongCredentials()[pri:1, instance:JonasFitness.API.AuthenticateMemberByUserCredentials@36916eb0]" started-at="2020-02-18T15:00:07 EST" name="wrongCredentials" description="PBI:139705" finished-at="2020-02-18T15:00:09 EST" duration-ms="2023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- wrongCredentials -->
        <test-method signature="memberFound()[pri:2, instance:JonasFitness.API.AuthenticateMemberByUserCredentials@36916eb0]" started-at="2020-02-18T15:00:09 EST" name="memberFound" description="PBI:139705" finished-at="2020-02-18T15:00:12 EST" duration-ms="3425" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- memberFound -->
        <test-method signature="accountLocked()[pri:3, instance:JonasFitness.API.AuthenticateMemberByUserCredentials@36916eb0]" started-at="2020-02-18T15:00:12 EST" name="accountLocked" description="PBI:139705" finished-at="2020-02-18T15:00:13 EST" duration-ms="422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- accountLocked -->
        <test-method signature="forcePasswordChange()[pri:4, instance:JonasFitness.API.AuthenticateMemberByUserCredentials@36916eb0]" started-at="2020-02-18T15:00:13 EST" name="forcePasswordChange" description="PBI:139705" finished-at="2020-02-18T15:00:13 EST" duration-ms="422" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- forcePasswordChange -->
      </class> <!-- JonasFitness.API.AuthenticateMemberByUserCredentials -->
    </test> <!-- API - Continuous Integration -->
  </suite> <!-- CompeteAPI v3 -->
</testng-results>
