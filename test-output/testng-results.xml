<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="58" passed="57" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2019-11-05T11:27:46 EST" name="CompeteAPI" finished-at="2019-11-05T11:28:47 EST" duration-ms="61279">
    <groups>
    </groups>
    <test started-at="2019-11-05T11:27:46 EST" name="Continuous Integration" finished-at="2019-11-05T11:28:47 EST" duration-ms="61279">
      <class name="JonasFitness.API.GetAvailableAppointments">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAvailableAppointments@66498326]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="NoResources()[pri:0, instance:JonasFitness.API.GetAvailableAppointments@66498326]" started-at="2019-11-05T11:28:13 EST" name="NoResources" description="PBI:127498" finished-at="2019-11-05T11:28:16 EST" duration-ms="2707" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoResources -->
        <test-method signature="WithResources()[pri:0, instance:JonasFitness.API.GetAvailableAppointments@66498326]" started-at="2019-11-05T11:28:16 EST" name="WithResources" description="PBI:127498" finished-at="2019-11-05T11:28:18 EST" duration-ms="1659" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WithResources -->
      </class> <!-- JonasFitness.API.GetAvailableAppointments -->
      <class name="JonasFitness.API.GetAppointmentDetails">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentDetails@732c2a62]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="AppointmentsFound()[pri:0, instance:JonasFitness.API.GetAppointmentDetails@732c2a62]" started-at="2019-11-05T11:28:07 EST" name="AppointmentsFound" description="PBI:139310" finished-at="2019-11-05T11:28:09 EST" duration-ms="1386" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsFound -->
        <test-method signature="AppointmentsNotFound()[pri:0, instance:JonasFitness.API.GetAppointmentDetails@732c2a62]" started-at="2019-11-05T11:28:09 EST" name="AppointmentsNotFound" description="PBI:139310" finished-at="2019-11-05T11:28:09 EST" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppointmentsNotFound -->
      </class> <!-- JonasFitness.API.GetAppointmentDetails -->
      <class name="JonasFitness.API.GetAppointmentResourceTypeByProduct">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentResourceTypeByProduct@120f102b]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ProductFound()[pri:0, instance:JonasFitness.API.GetAppointmentResourceTypeByProduct@120f102b]" started-at="2019-11-05T11:28:10 EST" name="ProductFound" description="PBI:127470" finished-at="2019-11-05T11:28:11 EST" duration-ms="503" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductFound -->
        <test-method signature="ProductNotFound()[pri:0, instance:JonasFitness.API.GetAppointmentResourceTypeByProduct@120f102b]" started-at="2019-11-05T11:28:11 EST" name="ProductNotFound" description="PBI:127470" finished-at="2019-11-05T11:28:11 EST" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ProductNotFound -->
      </class> <!-- JonasFitness.API.GetAppointmentResourceTypeByProduct -->
      <class name="JonasFitness.API.GetMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetMember@5ace1ed4]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="CustomerFound()[pri:0, instance:JonasFitness.API.GetMember@5ace1ed4]" started-at="2019-11-05T11:28:24 EST" name="CustomerFound" description="PBI:124934" finished-at="2019-11-05T11:28:24 EST" duration-ms="808" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CustomerFound -->
      </class> <!-- JonasFitness.API.GetMember -->
      <class name="JonasFitness.API.GetAvailableResourceTypesByClub">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAvailableResourceTypesByClub@cad498c]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetAvailableResourceTypesByClub@cad498c]" started-at="2019-11-05T11:28:18 EST" name="ValidInput" description="PBI:138961" finished-at="2019-11-05T11:28:18 EST" duration-ms="438" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetAvailableResourceTypesByClub -->
      <class name="JonasFitness.API.GetClassesAndCoursesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByMember@b62d79]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByMember@b62d79]" started-at="2019-11-05T11:28:22 EST" name="ValidInput" description="PBI:124953" finished-at="2019-11-05T11:28:23 EST" duration-ms="844" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetClassesAndCoursesByMember -->
      <class name="JonasFitness.API.SearchMembers">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="SearchMembers_Email()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:33 EST" name="SearchMembers_Email" description="PBI:124130" finished-at="2019-11-05T11:28:33 EST" duration-ms="533" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_Email -->
        <test-method signature="SearchMembers_FirstName()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:33 EST" name="SearchMembers_FirstName" description="PBI:124130" finished-at="2019-11-05T11:28:34 EST" duration-ms="666" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_FirstName -->
        <test-method signature="SearchMembers_HomePhoneDashes()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:34 EST" name="SearchMembers_HomePhoneDashes" description="PBI:124130" finished-at="2019-11-05T11:28:35 EST" duration-ms="723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_HomePhoneDashes -->
        <test-method signature="SearchMembers_HomePhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:35 EST" name="SearchMembers_HomePhoneNoDashes" description="PBI:124130" finished-at="2019-11-05T11:28:35 EST" duration-ms="549" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_HomePhoneNoDashes -->
        <test-method signature="SearchMembers_LastFirstName()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:35 EST" name="SearchMembers_LastFirstName" description="PBI:124130" finished-at="2019-11-05T11:28:36 EST" duration-ms="613" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_LastFirstName -->
        <test-method signature="SearchMembers_LastName()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:36 EST" name="SearchMembers_LastName" description="PBI:124130" finished-at="2019-11-05T11:28:36 EST" duration-ms="580" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_LastName -->
        <test-method signature="SearchMembers_MobilePhoneDashes()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:36 EST" name="SearchMembers_MobilePhoneDashes" description="PBI:124130" finished-at="2019-11-05T11:28:37 EST" duration-ms="545" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_MobilePhoneDashes -->
        <test-method signature="SearchMembers_MobilePhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:37 EST" name="SearchMembers_MobilePhoneNoDashes" description="PBI:124130" finished-at="2019-11-05T11:28:38 EST" duration-ms="724" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_MobilePhoneNoDashes -->
        <test-method signature="SearchMembers_WorkPhoneDashes()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:38 EST" name="SearchMembers_WorkPhoneDashes" description="PBI:124130" finished-at="2019-11-05T11:28:39 EST" duration-ms="860" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_WorkPhoneDashes -->
        <test-method signature="SearchMembers_WorkPhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchMembers@31e5415e]" started-at="2019-11-05T11:28:39 EST" name="SearchMembers_WorkPhoneNoDashes" description="PBI:124130" finished-at="2019-11-05T11:28:39 EST" duration-ms="552" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembers_WorkPhoneNoDashes -->
      </class> <!-- JonasFitness.API.SearchMembers -->
      <class name="JonasFitness.API.SearchMembersByProduct">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@a2431d0]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="SearchMembersByProduct_Email()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@a2431d0]" started-at="2019-11-05T11:28:39 EST" name="SearchMembersByProduct_Email" description="PBI:139726" finished-at="2019-11-05T11:28:40 EST" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembersByProduct_Email -->
        <test-method signature="SearchMembersByProduct_FirstName()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@a2431d0]" started-at="2019-11-05T11:28:40 EST" name="SearchMembersByProduct_FirstName" description="PBI:139726" finished-at="2019-11-05T11:28:40 EST" duration-ms="645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembersByProduct_FirstName -->
        <test-method signature="SearchMembersByProduct_HomePhoneWithDashes()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@a2431d0]" started-at="2019-11-05T11:28:40 EST" name="SearchMembersByProduct_HomePhoneWithDashes" description="PBI:139726" finished-at="2019-11-05T11:28:41 EST" duration-ms="496" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembersByProduct_HomePhoneWithDashes -->
        <test-method signature="SearchMembersByProduct_HomePhoneWithoutDashes()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@a2431d0]" started-at="2019-11-05T11:28:41 EST" name="SearchMembersByProduct_HomePhoneWithoutDashes" description="PBI:139726" finished-at="2019-11-05T11:28:41 EST" duration-ms="524" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembersByProduct_HomePhoneWithoutDashes -->
        <test-method signature="SearchMembersByProduct_LastName()[pri:0, instance:JonasFitness.API.SearchMembersByProduct@a2431d0]" started-at="2019-11-05T11:28:41 EST" name="SearchMembersByProduct_LastName" description="PBI:139726" finished-at="2019-11-05T11:28:42 EST" duration-ms="486" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SearchMembersByProduct_LastName -->
      </class> <!-- JonasFitness.API.SearchMembersByProduct -->
      <class name="JonasFitness.API.GetAppointmentsByBook">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentsByBook@625732]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetAppointmentsByBook@625732]" started-at="2019-11-05T11:28:11 EST" name="ValidInput" description="PBI:132256" finished-at="2019-11-05T11:28:12 EST" duration-ms="734" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetAppointmentsByBook -->
      <class name="JonasFitness.API.GetAppointmentProductByCategory">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentProductByCategory@272ed83b]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetAppointmentProductByCategory@272ed83b]" started-at="2019-11-05T11:28:09 EST" name="ValidInput" description="PBI:127468" finished-at="2019-11-05T11:28:10 EST" duration-ms="484" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetAppointmentProductByCategory -->
      <class name="JonasFitness.API.getbookavailabilitycalendar">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.getbookavailabilitycalendar@1b6e1eff]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.getbookavailabilitycalendar@1b6e1eff]" started-at="2019-11-05T11:28:47 EST" name="ValidInput" description="PBI:140727" finished-at="2019-11-05T11:28:47 EST" duration-ms="790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.getbookavailabilitycalendar -->
      <class name="JonasFitness.API.GetAllPackagesForPurchaseByClub">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAllPackagesForPurchaseByClub@1ba9117e]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="PackageFound()[pri:0, instance:JonasFitness.API.GetAllPackagesForPurchaseByClub@1ba9117e]" started-at="2019-11-05T11:27:49 EST" name="PackageFound" description="PBI:143540" finished-at="2019-11-05T11:28:07 EST" duration-ms="18101" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PackageFound -->
      </class> <!-- JonasFitness.API.GetAllPackagesForPurchaseByClub -->
      <class name="JonasFitness.API.GetPackageDetails">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetPackageDetails@27ff5d15]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="SinglePriceRange()[pri:0, instance:JonasFitness.API.GetPackageDetails@27ff5d15]" started-at="2019-11-05T11:28:28 EST" name="SinglePriceRange" description="PBI:143538" finished-at="2019-11-05T11:28:29 EST" duration-ms="650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SinglePriceRange -->
        <test-method signature="multiplePriceRanges()[pri:0, instance:JonasFitness.API.GetPackageDetails@27ff5d15]" started-at="2019-11-05T11:28:29 EST" name="multiplePriceRanges" description="PBI:143538" finished-at="2019-11-05T11:28:30 EST" duration-ms="994" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multiplePriceRanges -->
      </class> <!-- JonasFitness.API.GetPackageDetails -->
      <class name="JonasFitness.API.GetClubsByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetClubsByMember@6631f5ca]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="Test1()[pri:0, instance:JonasFitness.API.GetClubsByMember@6631f5ca]" started-at="2019-11-05T11:28:23 EST" name="Test1" description="PBI:127465" finished-at="2019-11-05T11:28:24 EST" duration-ms="579" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
      </class> <!-- JonasFitness.API.GetClubsByMember -->
      <class name="JonasFitness.API.GetActiveClubs">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetActiveClubs@a3d8174]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ClubsFound()[pri:0, instance:JonasFitness.API.GetActiveClubs@a3d8174]" started-at="2019-11-05T11:27:49 EST" name="ClubsFound" description="PBI:138959" finished-at="2019-11-05T11:27:49 EST" duration-ms="548" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClubsFound -->
      </class> <!-- JonasFitness.API.GetActiveClubs -->
      <class name="JonasFitness.API.GetPurchasedPackagesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetPurchasedPackagesByMember@649bec2e]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetPurchasedPackagesByMember@649bec2e]" started-at="2019-11-05T11:28:30 EST" name="ValidInput" description="PBI:124125" finished-at="2019-11-05T11:28:31 EST" duration-ms="630" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetPurchasedPackagesByMember -->
      <class name="JonasFitness.API.GetAppointmentsByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentsByMember@51dcb805]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetAppointmentsByMember@51dcb805]" started-at="2019-11-05T11:28:12 EST" name="ValidInput" description="PBI:124124" finished-at="2019-11-05T11:28:13 EST" duration-ms="1077" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetAppointmentsByMember -->
      <class name="JonasFitness.API.GetOnlinePackagesForPurchaseByClub">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetOnlinePackagesForPurchaseByClub@1613674b]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="PackageNotAllowed()[pri:0, instance:JonasFitness.API.GetOnlinePackagesForPurchaseByClub@1613674b]" started-at="2019-11-05T11:28:24 EST" name="PackageNotAllowed" description="PBI:143537" finished-at="2019-11-05T11:28:26 EST" duration-ms="1874" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PackageNotAllowed -->
        <test-method signature="PackagesFound()[pri:0, instance:JonasFitness.API.GetOnlinePackagesForPurchaseByClub@1613674b]" started-at="2019-11-05T11:28:26 EST" name="PackagesFound" description="PBI:143537" finished-at="2019-11-05T11:28:28 EST" duration-ms="1786" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PackagesFound -->
      </class> <!-- JonasFitness.API.GetOnlinePackagesForPurchaseByClub -->
      <class name="JonasFitness.API.GetProductByBook">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetProductByBook@4e096385]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetProductByBook@4e096385]" started-at="2019-11-05T11:28:30 EST" name="ValidInput" description="PBI:138968" finished-at="2019-11-05T11:28:30 EST" duration-ms="421" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetProductByBook -->
      <class name="JonasFitness.API.GetActiveBooksByResourceType">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetActiveBooksByResourceType@44821a96]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput_NoResource()[pri:0, instance:JonasFitness.API.GetActiveBooksByResourceType@44821a96]" started-at="2019-11-05T11:27:48 EST" name="ValidInput_NoResource" description="PBI:138964" finished-at="2019-11-05T11:27:49 EST" duration-ms="366" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <404>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <404>.

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:80)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:74)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:237)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:249)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:492)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:655)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:190)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:58)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:168)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:125)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:133)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:101)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1217)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at JonasFitness.API.GetActiveBooksByResourceType.ValidInput_NoResource(GetActiveBooksByResourceType.java:45)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput_NoResource -->
      </class> <!-- JonasFitness.API.GetActiveBooksByResourceType -->
      <class name="JonasFitness.API.GetScheduleByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetScheduleByMember@34f5090e]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetScheduleByMember@34f5090e]" started-at="2019-11-05T11:28:32 EST" name="ValidInput" description="PBI:124954" finished-at="2019-11-05T11:28:33 EST" duration-ms="1085" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetScheduleByMember -->
      <class name="JonasFitness.API.GetCardsOnFileByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@1e6454ec]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="CardWithoutAgreement()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@1e6454ec]" started-at="2019-11-05T11:28:18 EST" name="CardWithoutAgreement" description="PBI:146302" finished-at="2019-11-05T11:28:19 EST" duration-ms="647" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CardWithoutAgreement -->
        <test-method signature="MultipleAgreementsWithCard()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@1e6454ec]" started-at="2019-11-05T11:28:19 EST" name="MultipleAgreementsWithCard" description="PBI:146302" finished-at="2019-11-05T11:28:20 EST" duration-ms="760" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MultipleAgreementsWithCard -->
        <test-method signature="NoCardOnFile()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@1e6454ec]" started-at="2019-11-05T11:28:20 EST" name="NoCardOnFile" description="PBI:146302" finished-at="2019-11-05T11:28:20 EST" duration-ms="474" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoCardOnFile -->
        <test-method signature="SingleAgreementMultipleCardsOnFile()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@1e6454ec]" started-at="2019-11-05T11:28:20 EST" name="SingleAgreementMultipleCardsOnFile" description="PBI:146302" finished-at="2019-11-05T11:28:21 EST" duration-ms="732" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleAgreementMultipleCardsOnFile -->
        <test-method signature="SingleAgreementWithCard()[pri:0, instance:JonasFitness.API.GetCardsOnFileByMember@1e6454ec]" started-at="2019-11-05T11:28:21 EST" name="SingleAgreementWithCard" description="PBI:146302" finished-at="2019-11-05T11:28:21 EST" duration-ms="720" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SingleAgreementWithCard -->
      </class> <!-- JonasFitness.API.GetCardsOnFileByMember -->
      <class name="JonasFitness.API.GetClassesAndCoursesByBook">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByBook@2accdbb5]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetClassesAndCoursesByBook@2accdbb5]" started-at="2019-11-05T11:28:21 EST" name="ValidInput" description="PBI:140729" finished-at="2019-11-05T11:28:22 EST" duration-ms="656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetClassesAndCoursesByBook -->
      <class name="JonasFitness.API.GetScheduleByBook">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetScheduleByBook@693fe6c9]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.GetScheduleByBook@693fe6c9]" started-at="2019-11-05T11:28:31 EST" name="ValidInput" description="PBI:140730" finished-at="2019-11-05T11:28:32 EST" duration-ms="1058" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.GetScheduleByBook -->
      <class name="JonasFitness.API.SecurityPipeline">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.SecurityPipeline@1a4013]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="InactiveClub()[pri:0, instance:JonasFitness.API.SecurityPipeline@1a4013]" started-at="2019-11-05T11:28:45 EST" name="InactiveClub" description="PBI:144604" finished-at="2019-11-05T11:28:46 EST" duration-ms="327" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InactiveClub -->
        <test-method signature="InvalidAPIKey()[pri:0, instance:JonasFitness.API.SecurityPipeline@1a4013]" started-at="2019-11-05T11:28:46 EST" name="InvalidAPIKey" description="PBI:145817" finished-at="2019-11-05T11:28:46 EST" duration-ms="241" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidAPIKey -->
        <test-method signature="InvalidClub()[pri:0, instance:JonasFitness.API.SecurityPipeline@1a4013]" started-at="2019-11-05T11:28:46 EST" name="InvalidClub" description="PBI:132893" finished-at="2019-11-05T11:28:46 EST" duration-ms="315" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidClub -->
        <test-method signature="InvalidCompany()[pri:0, instance:JonasFitness.API.SecurityPipeline@1a4013]" started-at="2019-11-05T11:28:46 EST" name="InvalidCompany" description="PBI:132893" finished-at="2019-11-05T11:28:46 EST" duration-ms="234" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InvalidCompany -->
        <test-method signature="NoAPIKey()[pri:0, instance:JonasFitness.API.SecurityPipeline@1a4013]" started-at="2019-11-05T11:28:46 EST" name="NoAPIKey" description="PBI:145817" finished-at="2019-11-05T11:28:47 EST" duration-ms="207" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoAPIKey -->
      </class> <!-- JonasFitness.API.SecurityPipeline -->
      <class name="JonasFitness.API.SearchOnlineMembersByProduct">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@1cbb87f3]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="Email()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@1cbb87f3]" started-at="2019-11-05T11:28:42 EST" name="Email" description="PBI:139723" finished-at="2019-11-05T11:28:43 EST" duration-ms="620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Email -->
        <test-method signature="FirstName()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@1cbb87f3]" started-at="2019-11-05T11:28:43 EST" name="FirstName" description="PBI:139723" finished-at="2019-11-05T11:28:43 EST" duration-ms="904" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FirstName -->
        <test-method signature="LastName()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@1cbb87f3]" started-at="2019-11-05T11:28:43 EST" name="LastName" description="PBI:139723" finished-at="2019-11-05T11:28:44 EST" duration-ms="612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- LastName -->
        <test-method signature="PhoneNoDashes()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@1cbb87f3]" started-at="2019-11-05T11:28:44 EST" name="PhoneNoDashes" description="PBI:139723" finished-at="2019-11-05T11:28:45 EST" duration-ms="616" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PhoneNoDashes -->
        <test-method signature="PhoneWDashes()[pri:0, instance:JonasFitness.API.SearchOnlineMembersByProduct@1cbb87f3]" started-at="2019-11-05T11:28:45 EST" name="PhoneWDashes" description="PBI:139723" finished-at="2019-11-05T11:28:45 EST" duration-ms="624" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PhoneWDashes -->
      </class> <!-- JonasFitness.API.SearchOnlineMembersByProduct -->
      <class name="JonasFitness.API.AuthenticateMemberByUserCredentials">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.AuthenticateMemberByUserCredentials@4944252c]" started-at="2019-11-05T11:27:46 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="457" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="ValidInput()[pri:0, instance:JonasFitness.API.AuthenticateMemberByUserCredentials@4944252c]" started-at="2019-11-05T11:27:47 EST" name="ValidInput" description="PBI:139705" finished-at="2019-11-05T11:27:48 EST" duration-ms="1787" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ValidInput -->
      </class> <!-- JonasFitness.API.AuthenticateMemberByUserCredentials -->
      <class name="JonasFitness.API.GetAppointmentProductCategoriesByMember">
        <test-method is-config="true" signature="getData()[pri:0, instance:JonasFitness.API.GetAppointmentProductCategoriesByMember@41fecb8b]" started-at="2019-11-05T11:27:47 EST" name="getData" finished-at="2019-11-05T11:27:47 EST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getData -->
        <test-method signature="Test1()[pri:0, instance:JonasFitness.API.GetAppointmentProductCategoriesByMember@41fecb8b]" started-at="2019-11-05T11:28:10 EST" name="Test1" description="PBI:127467" finished-at="2019-11-05T11:28:10 EST" duration-ms="481" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
      </class> <!-- JonasFitness.API.GetAppointmentProductCategoriesByMember -->
    </test> <!-- Continuous Integration -->
  </suite> <!-- CompeteAPI -->
</testng-results>
